<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: conference | fr.romain:blog:3.0]]></title>
  <link href="http://linsolas.github.com/blog/categories/conference/atom.xml" rel="self"/>
  <link href="http://linsolas.github.com/"/>
  <updated>2013-11-14T18:35:51+01:00</updated>
  <id>http://linsolas.github.com/</id>
  <author>
    <name><![CDATA[Romain Linsolas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Devoxx 2013 - deuxième jour]]></title>
    <link href="http://linsolas.github.com/blog/2013/11/14/devoxx-2013-deuxieme-jour/"/>
    <updated>2013-11-14T09:50:00+01:00</updated>
    <id>http://linsolas.github.com/blog/2013/11/14/devoxx-2013-deuxieme-jour</id>
    <content type="html"><![CDATA[<p><img src="/images/devoxx_logo.gif" title="Devoxx 2013" alt="Devoxx 2013" /></p>

<p>Voici la deuxième journée à Devoxx version 2013.
Pour commencer la journée, la Keynote de Google annonce la sortie de la version 1.0 du langage <a href="https://www.dartlang.org/">Dart</a>.
Dart est le langage créé par Google au dessus de JavaScript afin de rendre ce dernier plus utilisable, en offrant pas mal de choses des langages Java ou C# comme les classes, un vrai développement orienté objet, etc.</p>

<p>Il a aussi été question du projet <a href="https://github.com/angular/angular.dart">Angular Dart</a>, une implémentation d'<a href="http://angularjs.org/">Angular</a> sur le language Dart.</p>

<!-- more -->


<h2><a href="http://devoxx.be/dv13-francesc-campoy-flores.html?presId=3493">Go see all the ships in the world</a></h2>

<p><img src="/images/note-3.5.png" title="3.5/5" alt="3.5/5" /></p>

<p>On parle beaucoup du Big Data. C'est souvent théorique, ou à des exemples qui ne semblent pas très parlants.
<a href="https://twitter.com/@francesc">Francesc Campoy Flores</a> nous propose une session où nous devrions avoir au final une visualisation dynamique de la position et trajectoires de tous les bateaux du monde ! Cela s'annonce intéressant d'un point de vue technique, et quelque peu exotique quant au contenu.</p>

<p>Parlons tout d'abord des données. Nous avons 75,000 bateaux (en éliminant les petits bateaux). Il faut donc d'abord récupérer ces données.
Les bateaux disposent d'un système appelé <a href="http://en.wikipedia.org/wiki/Automatic_Identification_System">AIS</a> (<em>Automatic Identification System</em>), une sorte de GPS avant l'heure pour les navires. Toutefois, ce type de protocole est peu fiable, et difficile à gérer.</p>

<p>Il faut donc stocker toutes ces données. Bien entendu, il fait appel au cloud de Google pour cela.
Le problème qui se pose aussi est la tête des données AIS, qui ne ressemble à pas grand chose :</p>

<p><img src="/images/devoxx2013-boats1.jpg" title="Les données AIS" alt="Les données AIS" /></p>

<p>Il existe toutefois une librairie en C++ qui permet d'interpréter ces données. Le seul hic, c'est que le cloud de Google ne permet pas d'exécuter du C++. Il faut donc écrire un traducteur vers du CSV pour finalement restocker ces informations dans ce format plus pratique.</p>

<p><a href="https://developers.google.com/bigquery/">BigQuery</a> est ensuite utilisé pour extraire les informations de toutes ces données. Une requête assez basique pour récupérer les positions moyennes des bateaux prend 5.8s sur 14Go de données.</p>

<p>Il faut maintenant servir ces données, de façon rapide et dynamique. Pour cela, Fransesc utilise l'API REST de BigQuery depuis du JavaScript. Toutefois, il inclut une application herbergée sur AppEngine entre le browser et le serveur BigQuery. En effet, on risque sinon de trop faire jouer le cache de ce dernier et du coup ne pas avoir les dernières données disponibles.
Cette application va matérialiser les requêtes, ainsi qu'une gestion du cache (memcache). Cette application est développée avec le langage Go, pour ses performances.</p>

<p>Voilà l'architecture finale du système. Pas si simple !</p>

<p><img src="/images/devoxx2013-boats2.jpg" title="L'architecture pour voir les bateaux" alt="L'architecture pour voir les bateaux" /></p>

<p>Et le résultat, basée sur Google Maps API, WebGL et CanvasLayer montre tout d'abord une floppée de points sur une carte (75,000 quand même). Puis, en utilisant les données disponibles, ces points sont colorés en fonctin de leur vitesse. Ce calcul est fait par le GPU. On laisse le CPU - peu utilisé autrement - calculer l'histogramme donnant la répartition des vitesses :</p>

<p><img src="/images/devoxx2013-boats3.jpg" title="Coloration en fonction de la vitesse" alt="Coloration en fonction de la vitesse" /></p>

<p>Une coloration en fonction de l'orientation du bateau montre très bien les différents canaux de navigation, comme par exemple autour de l'Espagne.</p>

<p><img src="/images/devoxx2013-boats4.jpg" title="Coloration en fonction de l'orientation" alt="Coloration en fonction de l'orientation" /></p>

<p>Et au final :</p>

<p><img src="/images/devoxx2013-boats5.jpg" title="La représentation des bateaux sur une carte" alt="La représentation des bateaux sur une carte" /></p>

<p>Une présentation tout à fait intéressante pour comprendre la démarche du traitement de ces données. Seul bémol, je m'attendais à un peu de live coding ou tout du moins une démo du résultat (plutôt qu'une vidéo). Mais il est vrai que le nombre de données assez important ainsi qu'un WIFI un peu à la ramasse aurait risqué de casser un peu l'expérience.</p>

<h2><a href="http://devoxx.be/dv13-igor-minar.html?presId=3468">What is in store for the future of Angular</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>AngularJS avait été <a href="">ma claque et ma découverte</a> de Devoxx 2012. Depuis, le framework est devenu très populaire, et plusieurs sessions ont déjà eu lieu à Devoxx 2013, toutes blindées.
<a href="https://twitter.com/@IgorMinar">Igor Minar</a> et <a href="https://twitter.com/@mhevery">Misko Hevery</a>, deux des principaux membres du projet, viennent nous parler de ce qui attend Angular pour l'année 2014.</p>

<p>La première chose de prévue pour Angular, c'est de se baser encore plus sur les standards, en particulier les <em>web components</em>, qui inclut :</p>

<ul>
<li>Shadow DOM</li>
<li>Custom elements, <code>document.register()</code></li>
<li>Templates</li>
<li>Scoped CSS</li>
</ul>


<p>Autre point, c'est l'utilisation du <code>Object.observe</code> qui permettra de meilleures performances que le <em>dirty checking</em> d'Angular. L'autre avantage de cette méthode est qu'elle est asynchrone.</p>

<p>Asynchrone DI (<em>Dependency Injection</em>) vs AMD (<a href="http://en.wikipedia.org/wiki/Asynchronous_module_definition">Asynchronous Module Definition</a>).</p>

<p>L'introduction des <strong>zones</strong> va permettre de supprimer <code>$apply</code> et <code>$digest</code>.</p>

<p><img src="/images/devoxx2013-angularjs-zones.jpg" title="Les zones d'Angular" alt="Les zones d'Angular" /></p>

<ul>
<li><code>DefaultZone</code> se comporte comme le navigateur.</li>
<li><code>StackTraceZone</code> permet des stacktraces plus longues.</li>
<li><code>AngularZone</code> applique le data-binding.</li>
<li><code>MockZone</code> pour faciliter les tests.</li>
</ul>


<p>Angular va également profiter des nouveautés d'EcmaScript 6, en particulier les classes et les modules.
Il sera également possible d'utiliser des annotations dans le code Angular.</p>

<p><img src="/images/devoxx2013-angularjs-annotations.jpg" title="Les annotations en Angular" alt="Les annotations en Angular" /></p>

<p>Les <strong>contrats</strong> font également leur apparition dans Angular :</p>

<p><img src="/images/devoxx2013-angularjs-contracts.jpg" title="Les contrats en Angular" alt="Les contrats en Angular" /></p>

<p>Bref, je laisse les présentateurs résumer à ma place :</p>

<p><img src="/images/devoxx2013-angularjs-summary.jpg" title="Résumé des nouveautés d'Angular" alt="Résumé des nouveautés d'Angular" /></p>

<p>La présentation était moins éclatante que l'année passée, mais forcément le sujet s'y prétait moins. Toutefois, cela montre qu'Angular a encore de beaux jours devant lui !</p>

<h2><a href="http://devoxx.be/dv13-romain-linsolas.html?presId=3545">The ingredients for a perfect JavaScript Software Factory</a></h2>

<p><img src="/images/note-5.png" title="5/5" alt="5/5" /></p>

<p>(vous vous doutez bien que la note est ici tout à fait objective)
Là, c'est mon Quickie !
J'y parle de JavaScript et d'usine logicielle, en particulier d'outils.
Ma présentation est essentiellement divisée en trois parties. Compte tenu du temps imparti - à peine 15 minutes - il ne m'est pas possible d'aller pleinement dans les détails, mais l'idée est d'aborder les points principaux du sujet:</p>

<ul>
<li>Tout d'abord, j'insiste sur le fait qu'il faut réutiliser ce que l'on a déjà sous la main, selon le bon vieux principe du <em>Don't Repeat Yourself</em> (DRY). En effet, nous sommes généralement des développeurs Java, et disposons à ce titre d'une usine logicielle déjà performante. Réutilisons donc Jenkins, SonarQube, et consorts !</li>
<li>Ensuite, intéressons nous aux outils propres à JavaScript. Là, je m'arrêtre surtout sur <a href="http://yeoman.io/">Yeoman</a>, c'est-à-dire <a href="https://github.com/yeoman/yo">Yo</a> pour créer des squelettes d'applications, <a href="http://bower.io/">Bower</a> pour gérer les dépendances et le packaging et enfin <a href="http://gruntjs.com/">Grunt</a>, un exécuteur de tâches (une sorte de Ant pour JavaScript, pour faire simple).</li>
<li>La dernière partie insiste sur le fait qu'une bonne usine logicielle n'est pas qu'une questions d'outils, mais aussi de bonnes pratiques. Et en terme de bonnes pratiques, les <em>tests</em> sont en première place. Je montre donc qu'il existe toutes sortes de librairies de tests en JavaScript, pour faire du test unitaire, du test fonctionnel, du BDD ou encore du test <em>front-end</em>.</li>
</ul>


<h2><a href="http://devoxx.be/dv13-dick-wall.html?presId=3713">Enregistrement live de JavaPosse</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>Le podcast de <a href="http://javaposse.com/">JavaPosse</a> est très connu et réputé. Comme chaque année, ils font un enregistrement live à Devoxx, à la manière des CastCodeurs.</p>

<p>Cette année, seule la moitié de l'équipe était présente, à savoir Chet Haase et Dick Wall. Du coup, la moitié des Cast Codeurs, avec Guillaume Laforge et Emmanuel Bernard est venue en renfort.</p>

<p><img src="/images/devoxx2013-javaposse.jpg" title="JavaPosse et les Cast Codeurs" alt="JavaPosse et les Cast Codeurs" /></p>

<p>Une session agréable, avec une session  avec de la bière offerte par Atlassian. Une fois de plus, merci à eux.</p>

<h2><a href="http://devoxx.be/dv13-andrzej-grzesik.html?presId=3500">Continuous Delivery antipatterns</a></h2>

<p><img src="/images/note-3.5.png" title="3.5/5" alt="3.5/5" /></p>

<p>A la SGCIB, nous sommes en plein dans le <em>Continuous Delivery</em>. Il me paraissait donc important de recueillir quelques nouveaux avis et de bons conseils. C'est dans ce but que j'assiste à la conférence de  <a href="http://devoxx.be/dv13-andrzej-grzesik.html">Andrzej Grzesik</a>.</p>

<p>Le problème est avant tout un problème de personnes, de process.
Il faut des dashboards, pour savoir qui (a) fait quoi.
Releases = risques. Il faut donc savoir les éviter (les risques, pas les releases !)</p>

<p>Paralléliser les releases. Mais quoi paralléliser ? A priori, tout est parallélisable. Le mieux est de voir ce qui est le plus pénible, le plus long à s'exécuter dans une release, et voir comment on peut le paralléliser.</p>

<p>Autre problème fréquent : des équipes indépendantes, qui ne se parlent pas (devs contre ops par exemple). Il faut restaurer un canal de discussion, de communication.</p>

<p>L'infrastructure manuelle.
Il faut tester aussi son infrastructure. Avec <a href="http://www.opscode.com/chef/">Chef</a> par exemple, il est possible de faire une sorte de TDD. <a href="http://acrmp.github.io/foodcritic/">Food critic</a> ou <a href="http://www.vagrantup.com/">Vagrant</a> peuvent également être utiles.</p>

<h2><a href="http://devoxx.be/dv13-shaun-smith.html?presId=3568">Practical RESTful persistence</a></h2>

<p><img src="/images/note-2.5.png" title="2.5/5" alt="2.5/5" /></p>

<p>Finalement, on change de sujet, pour aller voir <a href="https://twitter.com/@shaunmsmith">Shaun Smith</a> parler de la nouvelle fonctionnalité d'<a href="http://www.eclipse.org/eclipselink/">EclipseLink</a> de <a href="http://wiki.eclipse.org/EclipseLink/Development/2.4.0/JPA-RS">JPA-RS</a>, qui intgère JAX-RS, JAXB et JPA.
L'idée est ici de réaliser un binding entre des entités et du JSON entre autres via des annotations dans les entités.</p>

<p>Bon, j'avoue être passé à côté de cette session, je n'ai pas trop compris le pourquoi de tout ça.</p>

<p>Voilà, la deuxième journée s'achève avec encore de belles expériences (sauf gastronomiques !).
Demain sera plus calme, avec seulement une demi-journée de travail.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Devoxx 2013 - premier jour]]></title>
    <link href="http://linsolas.github.com/blog/2013/11/13/devoxx-2013-premier-jour/"/>
    <updated>2013-11-13T08:56:00+01:00</updated>
    <id>http://linsolas.github.com/blog/2013/11/13/devoxx-2013-premier-jour</id>
    <content type="html"><![CDATA[<p><img src="/images/devoxx_logo.gif" title="Devoxx 2013" alt="Devoxx 2013" /></p>

<p>Et voilà, ma deuxième expérience belge de Devoxx est entamée.</p>

<!-- more -->


<h2><a href="http://devoxx.be/dv13-sven-peters.html?presId=3143">How To Do Kick-Ass Software Development</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p><img src="/images/devoxx-2013-kickass.jpg" title="Kick-ass development" alt="Kick-ass Development" /></p>

<p>J'ai choisi cette présentation de <a href="https://twitter.com/@svenpet">Sven Peters</a> d'Atlassian, car j'avais beaucoup apprécié sa présentation l'année passée sur <a href="http://linsolas.github.io/blog/2012/11/18/devoxx-2012-jour-1/">7 things to make a good team great</a>. Il y présentait 7 trucs pour rendre une bonne équipe encore meilleure. C'est d'ailleurs lors de cette présentation qu'il m'est venue l'idée de mettre les <a href="http://www.brownbaglunch.fr">Brown Bag Lunch</a> à la SGCIB (via l'idée "<em>Feed you brain</em>"), peu de temps avant que ce mouvement ne prenne de l'ampleur en France.</p>

<p>Sven s'est intéressé au film <a href="http://www.imdb.com/title/tt1250777/">Kick-Ass</a>, où une personne quelconque souhaite devenir un super-héros, juste en portant un costume. Forcément, au début il se fait dérouiller, mais persiste. Et c'est le message de Sven : se prendre des gamèles, mais toujours se relever.</p>

<p>Mais que souhaite t-on atteindre avec son équipe ?</p>

<ul>
<li>un meilleur software ;</li>
<li>moins d'<em>overhead</em> ;</li>
<li>un développement plus rapide ;</li>
<li>des clients heureux ;</li>
<li>des développeurs heureux.</li>
</ul>


<p>Il y a quelques temps, la solution à tous les problèmes était l'agilité. Mais qu'en est-il en 2013 ?
Le problème de toute méthodologie ou technologie c'est qu'au début c'est super, mais très vite les soucis commencent à surgir, jusqu'à s'apercevoir que cette solution ne résoud pas tous les problèmes (voir la <a href="http://en.wikipedia.org/wiki/Hype_cycle">Gartner Hype Curve</a>).</p>

<p>Il faut toujours garder à l'esprit de construire la bonne chose ("<em>Building the right thing</em>").
Une idée est le "<em>Fake it til you make it</em>".
Sven nous montre l'exemple à ne pas suivre avec le <a href="http://en.wikipedia.org/wiki/Microsoft_Kin">téléphone Kin</a> de Microsoft. Censé être très adapté à la nouvelle génération, il fut un échec très retentissant, sorti de la vente à peine au bout de deux semaines, et aura fait perder plus d'un milliard de dollars à la firme !</p>

<p><img src="http://www.digitaltrends.com/wp-content/uploads/2010/06/043775-microsoft-kin.jpg" title="Microsoft Kin" alt="Image Microsoft Kin" /></p>

<p>A l'opposé, IBM a voulu tester une application de reconnaissance vocale.
Plutôt que de développer un système complexe, ils ont triché en mettant une personne réelle dont le rôle était d'exécuter les tâches dictées par un cobaye. L'expérimentation n'ayant pas convaincue, il fut décidé que l'application réelle ne serait pas développée.</p>

<p>Passons à l'importance du feedback. Celui-ci doit répondre à trois critères :</p>

<ul>
<li>facile à trouver ;</li>
<li>simple ;</li>
<li>rapide à soumettre.</li>
</ul>


<p>Il ne faut pas embêter directement les développeurs avec les feedbacks. Par exemple, pour l'équipe GMail, il y a 100 développeurs pour 425M utilisateurs. Imaginer que ce soit les développeurs qui traitent directement les feedbacks des utilisateurs. Le développement de l'application n'avancerait jamais.
Cependant, tous doivent être conscients de ce qui ne va pas.</p>

<p>Chaque jour, l'équipe d'Atlassian se réunit 45 minutes pour revoir ces feedbacks et en faire quelque chose de personnel.
De plus, chaque développeur passe une semaine par an au support de premier niveau, pour être en contact directement avec les problèmes des utilisateurs.</p>

<p>Autre point, ce qu'ils appellent le <em>Developer on Test</em>. Il s'agit de faire remplir le rôle de testeur aux développeurs.
Pour cela, six astuces :</p>

<ul>
<li>Le training. Comment penser comme un testeur ?</li>
<li>Faire du <em>pairing</em> entre un testeur et un développeur.</li>
<li><em>Blitz Test</em> : durant une journée, toute la compagnie - et pas seulement les développeurs et les testeurs - teste une nouvelle vesion.</li>
<li>Définir des recettes de tests.</li>
<li>Instaurere des sessions séparées : pendant une heure, deux équipes testent les mêmes choses, puis comparent leurs résultats.</li>
<li>La chasse aux bugs : pendant une semaine, un développeur est dédié à la chasse aux bugs sur tous les éléments marqués comme Terminés.</li>
</ul>


<p>Sven nous rappelle alors que "La qualité est la responsabilité de chacun".</p>

<p>Sven passe ensuite sur le design. A Atlassian, les développeurs font aussi du design.
Ils n'étaient pas forcément mauvais, mais cela avait tendance à partir dans tous les sens.
Ce dont ils ont besoin, c'est de lignes directrices, de <em>design guidances</em> (<a href="https://developer.atlassian.com/design">les guidlines de design d'Atlassian</a>).</p>

<p>Ils organisent également des workshops pour les développeurs.</p>

<p>Comme un développement complet requiert la collaboration de plusieurs départements, il est important de supprimer les frictions qui peuvent apparaitre entre eux.</p>

<p>Atlassian définit également des <em>guidelines</em> pour le développement. Ainsi, pour chaque tâche une branche est créée sur Git.
Leur durée de vie est ainsi très courte (environ 2 jours).
Puis, pour merger le code, ils passent par des <em>push requests</em>, ce qui fait que le nouveau code est revu et validé par ses pairs. Ce nouveau code n'est donc plus de la responsabilité d'un seul développeur.</p>

<p>Dernier point : l'automatisation. Le principe est d'échouer rapidement (<em>Fail fast</em>). 4 choses à retenir :</p>

<ul>
<li>Mettre à disposition les artifacts générés.</li>
<li>Paralleliser les tests pour les accélérer.</li>
<li>Avoir une stratégie de builds. Créer des couches de tests selon leur catégorie, leur intérêt.</li>
<li>Toujours avoir un oeil sur les statistiques. Savoir par exemple ce qui prend du temps sur un build, pour être en mesure de l'accélérer.</li>
</ul>


<p>Encore une belle présentation de Sven Peters.</p>

<h2><a href="http://devoxx.be/dv13-chet-haase.html?presId=3193">Patterns, Shmatterns</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>Pourquoi cette présentation ? Tout simplement pour son orateur, <a href="https://twitter.com/@chethaase">Chet Haase</a>. L'année passée, il avait aussi présenté un Quickie (<a href="">The Future of Software Development Process Methodology Effectiveness</a>) qui avait été un beau succès.</p>

<p>Encore une fois, la salle était comble. Chet Haase a cette fois-ci passé en revue un certain nombre de patterns et les a comparé avec ses propres patterns, ce qui en faisait quelque chose d'assez drôle.</p>

<p><img src="/images/devoxx-2013-chethaase.jpg" title="Le design pattern Refactory" alt="Le design pattern Refactory" /></p>

<h2><a href="http://devoxx.be/dv13-sven-peters.html?presId=3144">Don't use Git</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>A nouveau, <a href="https://twitter.com/@svenpet">Sven Peters</a> sur la scène. Le titre de la conférence peut paraître provocateur, tant Git est utilisé partout (Atlassian a même Stash dans son catalogue, un gestionnaire de repositories Git).
Mais cela est en fait une façon de promouvoir ce système de gestion de sources.</p>

<p>Sous le ton de l'ironie, Sven essaie de démonter les arguments qui font de Git un vrai succès. Git permet de travailler en mode déconnecté ? Mais c'est la fin du travail collaboratif ! Git rend les merges faciles et presque automatiques ? Mais le travail de merge sur SVN est une ôde à la cohésion d'équipe...</p>

<p>Bien entendu, tout cela n'est que prétexte pour montrer en quoi Git est supérieur aux anciens gestionnaires de sources comme SVN.</p>

<h2><a href="http://devoxx.be/dv13-nikolay-chashnikov.html?presId=3772">Efficient coding in IntelliJ IDEA</a></h2>

<p><img src="/images/note-2.png" title="2/5" alt="2/5" /></p>

<p><a href="http://devoxx.be/dv13-nikolay-chashnikov.html?presId=3772">Nikolay Chashnikov</a> est aux commandes pour nous montrer comment bien maitriser son IDE IntelliJ IDEA de JetBrains.
Après pas mal d'essais ratés, je suis finalement passé définitivement sur cet IDE depuis un an, et clairement, je ne reviendrais pas en arrière. Mais je suis conscient de n'utiliser qu'une toute petite partie des capacités de l'outil. J'attends donc de cette session qu'elle me donne plein de bons conseils.</p>

<p>Hélas, je resterais sur ma faim. Une bonne première partie de la session montre surtout les capacités d'autocomplétion proposées par IntelliJ. Le reste est avant tout la découverte (ou non) d'un certain nombre de raccourcis claviers. Bref, pas grand chose à se mettre sous la dent, si ce n'est 2 ou 3 nouveaux raccourcis. C'est chez payé pour une conférence d'une heure !</p>

<p>Je pense que cette session peut être intéressante pour une personne utilisant Eclipse et souhaitant comprendre pourquoi IntelliJ est si puissant. Mais pour un utilisateur d'IntelliJ, même un non expert comme moi, peu d'informations à en tirer. Dommage.</p>

<h2><a href="http://devoxx.be/dv13-tugdual-grall.html?presId=3281">Elastify your app: from SQL to NoSQL in less than one hour!</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>J'avais déjà assisté à cette présentation <a href="">lors de Devoxx France 2013</a>, toujours faite par <a href="https://twitter.com/@tgrall">Tugdual Grall</a> et <a href="https://twitter.com/@dadoonet">David Pilato</a>.
Je me suis dit que j'allais quand même y jeter un oeil pour mieux l'apprécier.</p>

<p><img src="/images/devoxx-2013-elastify.jpg" title="Elastify your application" alt="Elastify your application" /></p>

<p>N'hésitez pas à relire <a href="http://linsolas.github.io/blog/2013/03/28/devoxx-france-2013-jour-2/">mon résumé lors de Devoxx France 2013</a>.</p>

<h2><a href="http://devoxx.be/dv13-attila-szegedi.html?presId=3732">The Curious Case of JavaScript on the JVM</a></h2>

<p><img src="/images/note-3.png" title="3/5" alt="3/5" /></p>

<p>J'aime Java, j'aime le JavaScript. Je me dis qu'une session mélangeant les deux pourrait être intéressante.
Je me décide donc d'aller voir ce qu'en dit <a href="https://twitter.com/@szegedi">Attila Szegedi</a>.
Il y était question de <a href="http://openjdk.java.net/projects/nashorn/">Nashorn</a>, qui est l'implémentation d'un <em>runtime</em> JavaScript hautes performances sur la JVM.</p>

<p>En gros, on écrit du JavaScript mélangé à du Java - à moins que ce ne soit l'inverse ? A noter que Nashorn devrait être <em>normalement</em> inclus dans le JDK 1.8.</p>

<p>J'ai un peu de mal à voir l'intérêt de ce mélange, mais pourquoi pas. C'est aussi ce genre de chose qui fait la richesse de la plateforme de la JVM :)</p>

<p>Voilà une première journée déjà bien intéressante, j'attends avec impatience la deuxième fournée de conférences, qui s'annonce de belle qualité.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mon programme pour Devoxx 2013]]></title>
    <link href="http://linsolas.github.com/blog/2013/11/12/mon-programme-pour-devoxx-2013/"/>
    <updated>2013-11-12T19:35:00+01:00</updated>
    <id>http://linsolas.github.com/blog/2013/11/12/mon-programme-pour-devoxx-2013</id>
    <content type="html"><![CDATA[<p><img src="/images/devoxx_logo.gif" title="Devoxx 2013" alt="Devoxx 2013" /></p>

<p>Et c'est parti mon Kiki !</p>

<p>LA conférence de l'année a débuté ce lundi 11 novembre, je veux bien sûr parler de <a href="http://devoxx.be/">Devoxx</a> !
Pour la 4e fois d'affilée, et la 2e en ce qui concerne la version "World" en Belgique, j'y serais à partir de demain mercredi.</p>

<p>Mon programme n'est bien sûr pas encore défini, mais j'ai noté quelques sessions qui m'intéressent déjà.</p>

<!-- more -->


<ul>
<li>Je commencerais sans doute par <a href="http://devoxx.be/dv13-sven-peters.html?presId=3143">How To Do Kick-Ass Software Development</a> de <a href="https://twitter.com/@svenpet">Sven Peters</a>. J'avais assisté à sa conférence l'année passée <a href="http://linsolas.github.io/blog/2012/11/18/devoxx-2012-jour-1/">7 things: How to make good teams great</a> que j'avais beaucoup apprécié. Je ne sais pas s'il y aura beaucoup de nouveautés, mais je pense que ça vaut quand même le coup d'oeil. Il y a également <a href="http://devoxx.be/dv13-dierk-knig.html?presId=3563">UI Engineer - the missing profession</a> par <a href="https://twitter.com/@mittie">Dierk König</a>, qui pourra être ma session de backup.</li>
<li>Pour entamer les Quickies, j'opterais pour <a href="http://devoxx.be/dv13-chet-haase.html?presId=3193">Patterns, Shmatterns</a>, une présentation par <a href="https://twitter.com/@chethaase">Chet Haase</a> qui devrait être du même niveau que sa présentation <a href="http://linsolas.github.io/blog/2012/11/18/devoxx-2012-jour-1/">The Future of Software Development Process Methodology Effectiveness</a> faite l'année dernière : complètement décalée et très drôle.</li>
<li>Pour le Quickie suivant, ce sera peut-être encore Sven Peters avec <a href="http://devoxx.be/dv13-sven-peters.html?presId=3144">Don't use Git</a> ou <a href="http://devoxx.be/dv13-xavier-coulon.html?presId=3586">HTTP caching in practice</a>.</li>
<li>Pour la digestion, je me laisserais bien tenté par un <a href="http://devoxx.be/dv13-nikolay-chashnikov.html?presId=3772">Efficient coding in IntelliJ IDEA</a> par <a href="http://devoxx.be/dv13-nikolay-chashnikov.html?presId=3772">Nikolay Chashnikov</a>, parce qu'on ne connait pas assez son IDE. Au cas où, il y a bien une session avec un robot avec <a href="http://devoxx.be/dv13-tobias-antonsson.html?presId=3730">The Crazyflie Nano Quadcopter development platform</a> par <a href="http://devoxx.be/dv13-tobias-antonsson.html">Tobias Antonsson</a>.</li>
<li>Puis, un petit <a href="http://devoxx.be/dv13-tugdual-grall.html?presId=3281">Elastify your app: from SQL to NoSQL in less than one hour!</a> par mes amis <a href="https://twitter.com/@tgrall">Tugdual Grall</a> et <a href="https://twitter.com/@dadoonet">David Pilato</a>, qui montrent qu'il est possible d'intégrer facilement du NoSQL dans une application Legacy. Je me dis d'ailleurs qu'avec leurs bons conseils et ceux de <a href="http://devoxx.be/dv13-david-gageot.html?presId=3108">David Gageot</a>, on pourrait faire passer une application Legacy dans le cloud avec NoSQL en 120 minutes chrono :o)</li>
<li>Pour continuer, j'hésite entre <a href="http://devoxx.be/dv13-luke-daley.html?presId=3680">Taming Functional Web Testing (with Spock &amp; Geb)</a> par <a href="https://twitter.com/@ldaley">Luke Daley</a> et <a href="http://devoxx.be/dv13-attila-szegedi.html?presId=3732">The Curious Case of JavaScript on the JVM</a> par <a href="https://twitter.com/@szegedi">Attila Szegedi</a>.</li>
</ul>


<p>Je ne sais pas encore comment je finirais ma première journée, mais elle aura déjà été bien remplie !
Pour le jeudi, quelques idées :</p>

<ul>
<li><a href="http://devoxx.be/dv13-francesc-campoy-flores.html?presId=3493">Go see all the ships in the world</a> par <a href="https://twitter.com/@francesc">Francesc Campoy Flores</a> qui se propose de construire une visualisation dynamique de la position et trajectoire de tous les bateaux du monde ! Un vaste programme...</li>
<li>Pour la suite, j'aimerais bien assister à <a href="http://devoxx.be/dv13-igor-minar.html?presId=3468">What is in store for the future of Angular</a> par <a href="https://twitter.com/@IgorMinar">Igor Minar</a> et <a href="https://twitter.com/@mhevery">Misko Hevery</a>, mais je pense que ce sera l'une des sessions les plus blindées, tant AngularJS est populaire en ce moment !</li>
<li>Mon premier Quickie aurait bien été <a href="http://devoxx.be/dv13-david-pilato.html?presId=3282">Make sense of your (BIG) data!</a> par <a href="https://twitter.com/@dadoonet">David Pilato</a>, mais il se trouve que je passe à la même heure que lui ! Ce sera donc <a href="http://devoxx.be/dv13-romain-linsolas.html?presId=3545">The ingredients for a perfect JavaScript Software Factory</a> par <a href="https://twitter.com/@romaintaz">moi-même</a> !</li>
<li>Pour la suite, ce sera peut-être <a href="http://devoxx.be/dv13-sam-brannen.html?presId=3235">Spring Framework 4.0 - The Next Generation</a> par <a href="https://twitter.com/@sam_brannen">Sam Brannen</a>, ou l'enregistrement du PodCast <a href="http://devoxx.be/dv13-dick-wall.html?presId=3713">JavaPosse</a>.</li>
<li>Je continuerais par du Continuous Delivery avec <a href="http://devoxx.be/dv13-andrzej-grzesik.html?presId=3500">Continuous Delivery antipatterns</a> par <a href="http://devoxx.be/dv13-andrzej-grzesik.html">Andrzej Grzesik</a> puis <a href="http://devoxx.be/dv13-hans-dockter.html?presId=3604">Continuous Delivery Patterns for Large Software Stacks</a> de <a href="https://twitter.com/@gradleware">Hans Dockter</a>.</li>
</ul>


<p>Je crois bien que ma journée de jeudi s'achèvera par le film proposé par Devoxx, <a href="http://www.allocine.fr/film/fichefilm_gen_cfilm=202971.html">The Counselor, Le Cartel</a> de Ridley Scott.
Pour la dernière journée (enfin, demi-journée), mon programme :</p>

<ul>
<li>Je commencerais peut-être par <a href="http://devoxx.be/dv13-scott-kurz.html?presId=3728">Batch Applications for the Java Platform (JSR 352)</a> de <a href="http://devoxx.be/dv13-scott-kurz.html">Scott Kurz</a>.</li>
<li>Bien évidemment, un Devoxx ne serait rien sans son enregistrement live des <a href="http://devoxx.be/dv13-vincent-massol.html?presId=3430">CastCodeurs</a>. Ma place y est donc déjà réservée :o)</li>
<li>Pour terminer cette conférence, je me laisserais bien tenté par <a href="http://devoxx.be/dv13-jean-franois-denise.html?presId=3759">Avatar.js, Server-Side JavaScript on the Java Platform</a> par <a href="http://devoxx.be/dv13-jean-franois-denise.html">Jean-François Denise</a>.</li>
</ul>


<p>Voilà, mon programme est établi. Bien entendu, celui-ci va sans aucun doute beaucoup évoluer quand je serais sur place. On verra vendredi après-midi si j'avais bien jugé ou pas...</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SoftShake 2013 - facilitation graphique]]></title>
    <link href="http://linsolas.github.com/blog/2013/10/29/softshake-2013-facilitation-graphique/"/>
    <updated>2013-10-29T18:31:00+01:00</updated>
    <id>http://linsolas.github.com/blog/2013/10/29/softshake-2013-facilitation-graphique</id>
    <content type="html"><![CDATA[<p>Les organisateurs de la conférence SoftShake ont eu la très bonne idée d'inviter Elizabeth Auzan et Sébastien Gerbier des "<em>Visual Thinkers</em>", ou <em>Facilitateus Visuels</em>, de la société <a href="http://www.lowtech-hitouch.com/">Lowtech Hitouch</a>.</p>

<p>L'idée est simple : ils se présentent à différentes sessions et illustrent graphiquement ce qu'ils entendent, ce qu'ils comprennent.
Je n'ai pas eu la chance qu'ils viennent à ma session, mais je partage quand même les très jolies planches que voici (désolé pour la 4e qui est un peu floue) :</p>

<p><img src="/images/softshake-2013-dessin1.jpg" title="Première image" alt="Priemère image" /></p>

<!-- more -->


<p><img src="/images/softshake-2013-dessin2.jpg" title="Deuxième image" alt="Deuxième image" />
<img src="/images/softshake-2013-dessin3.jpg" title="Troisième image" alt="Troisième image" />
<img src="/images/softshake-2013-dessin4.jpg" title="Quatrième image" alt="Quatrième image" />
<img src="/images/softshake-2013-dessin5.jpg" title="Cinquième image" alt="Cinquième image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SoftShake 2013 - deuxième jour]]></title>
    <link href="http://linsolas.github.com/blog/2013/10/25/softshake-2013-deuxieme-jour/"/>
    <updated>2013-10-25T16:19:00+02:00</updated>
    <id>http://linsolas.github.com/blog/2013/10/25/softshake-2013-deuxieme-jour</id>
    <content type="html"><![CDATA[<p><img src="/images/soft-shake-2013.png" title="Soft Shake 2013" alt="Soft Shake 2013" /></p>

<p>Et c'est parti pour le second jour de la conférence <strong>Soft-Shake</strong>.</p>

<!-- more -->


<h2>Keynote collaborative</h2>

<p>La première keynote de la journée était une keynote "collaborative".
Chaque responsable d'un track de sessions avait la parole pendant 4 minutes pour nous exposer sa vision à moyen terme (entre 2 et 5 ans) concernant sa technologie. Par exemple, le responsable de la partie "web" nous a dit que le JavaScript sera encore plus présent qu'aujourd'hui, en particulier du côté serveur.</p>

<h2>Keynote Programatoo</h2>

<p><img src="/images/note-4.5.png" title="4.5/5" alt="4.5/5" /></p>

<p>La seconde keynote parlait de "<strong>Programatoo</strong>", un projet lancé par Audrey Neveu (<a href="https://twitter.com/Audrey_Neveu">@Audrey_Neveu</a>) et Aline Paponaud (<a href="https://twitter.com/bootis">@bootis</a>) de <a href="http://www.sfeir.fr">SFEIR</a>.
Qu'est-ce que Programatoo ?
Il s'agit d'apprendre à coder à nos enfants, n'y plus n'y moins.</p>

<p><img src="/images/programatoo.jpg" title="Programatoo" alt="Programatoo" /></p>

<p>Revenons 20 ans en arrière pour comprendre la génèse de cette idée.
Au milieu des années 80, Aline et Audrey sont des petites filles (très sages, forcément) déjà attirées par les mystères de l'informatique et des ordinateurs. Elles veulent comprendre comment ça marche. 10 ans plus tard, leur intérêt est toujours intact, mais hélas elles se heurtent souvent à des stéréotypes ("<em>ce n'est pas pour les filles !</em>") ou l'incompréhension du milieu scolaire pour ce domaine.
Audrey apprend avec joie qu'il y a des cours d'informatique dans son lycée. Elle s'y inscrit, mais cela se résumera à apprendre à utiliser Word ou Excel. C'est la déception.
De son côté, Aline n'a guère plus de succès.
Fort heureusement, elles ne baissent pas les bras, et embrassent le métier de programmeuse.</p>

<p>En 2012, Aline va trouver Audrey pour proposer une idée géniale : et si on apprenait à coder à nos enfants ! C'est ainsi qu'en mars 2012 nait la première session "Programatoo", avec les enfants des employés de SFEIR. Et c'est un succès.</p>

<p>Les choses ne sont pas pour autant parfaites.
Elles font un constat navrant. Parmi les participants, il y avait deux adolescentes. Celles-ci sont parfaitement à l'aise avec les ordinateurs, du moins quand il s'agit d'utiliser Facebook, YouTube et autres services du genre. Mais elles sont incapables de vraiment utiliser un ordinateur, de comprendre comment cela fonctionne, ni même voir en cette machine un merveilleux outil de créativité !</p>

<p>On dit que la jeune génération est une génération "digitale", qu'elle est née avec un smartphone dans les mains. Je le constate aussi, mon fils de 6 ans maitrise depuis un moment l'iPad, qui n'a plus de secret pour lui.
Mais en réalité, nos enfants sont conditionnés pour "<strong>consommer</strong>" de l'informatique. Il faut les aider à en devenir des acteurs, des vrais utilisateurs.
Finalement, c'est un peu comme une carte et un GPS : aujourd'hui, l'utilisation d'un GPS est plutôt intuitive et il nous mâche tout le travail, on n'a plus qu'à suivre bêtement ses instructions. Du coup, il devient obsolète de savoir lire une carte papier classique, et pourtant cela reste la base pour savoir se positionner quelque part...</p>

<p>En tant qu'informaticien, il ne tient qu'à nous de changer la donne. Nous avons beaucoup d'outils, de langages destinés à l'aprentissage de la programmation, y compris destinés à de jeunes enfants.
Ayant discuté ensuite avec Audrey, je vais sans doute essayer de mettre mon fils à la programmation.
Bien entendu, point de Scala :) mais plutôt du <a href="http://scratch.mit.edu">Scratch</a> qui a l'avantage d'être très visuel et ludique.</p>

<p>Il faut noter que le projet Programatoo n'est pas unique en son genre. Les conférences "Devoxx 4 Kids" s'organisent par-ci, par-là. Il y en avait justement une à Genève le samedi qui a suivi la conférence Soft-Shake.</p>

<p>Programatoo a également gagné le "Duke Choice Awards 2013" à la conférence Java One. Une très belle consécration amplement méritée.
Bravo Audrey et Aline !</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_ruby/2013/10/25/01-speedup-your-web-app.html">Speed-up your webapp</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/alexis-bernard.html">Alexis Bernard</a> (<a href="https://twitter.com/alexis_bernard">@alexis_bernard</a>)</p>

<p><img src="/images/note-2.png" title="2/5" alt="2/5" /></p>

<p>Je suis ouvert d'esprit, je vais donc dans le track "Ruby" pour la première session de la journée.
Alexis nous parle d'optimisation quand on veut accélérer son site web.</p>

<p>Première question : pourquoi le faire ?
A cela, Alexis nous donne les exemples de Amazon et Yahoo! : pour le premier, diminuer le temps de réponse de 100ms, c'est un gain de revenu de l'ordre d'1%, ce qui n'est pas négligeable quand on voit leurs revenus...
Pour le second, une diminution de 400ms de ce temps de réponse, et c'est 9% de traffic gagnés !
Tout le monde n'est pas Amazon ou Yahoo! mais cela reste intéressant.</p>

<p>La technique d'Alexis est simple : mesurer, optimiser et mesurer encore.</p>

<p>Donc il faut mesurer. Pour cela, Alexis nous parle de quelques outils :</p>

<ul>
<li><a href="http://www.newrelic.com/">New Relic</a>, une solution SAAS visiblement assez poussée, qui historise en plus les mesures. Pratique pour comparer dans le temps. Mais c'est une solution assez chère visiblement (de l'ordre de 150€ par mois et par serveur).</li>
<li><a href="https://github.com/MiniProfiler/rack-mini-profiler">Rack Mini Profiler</a>, un outil Ruby, un peu dans la même idée que New Relic, mais avec moins de fonctionnalités, et pas d'historisation.</li>
<li><a href="https://www.pingdom.com/">Pingdom</a> dont l'une des fonctionnalités est de vérifier que les recommandations standard d'optimisations des sites-web sont bien respectées.</li>
<li><a href="http://www.webpagetest.org/">WebPageTest</a>, qui a l'astuce de tester chaque requête 2 fois de suite. Cela permet ainsi de vérifier l'efficacité du système de cache des ressources.</li>
<li>Chrome Dev Tools peut aussi être mis à profit pour mesurer les performances de l'application.</li>
</ul>


<p>Une fois les mesures faites, il faut corriger les problèmes. Alexis nous dit qu'il faut toujours optimser le <em>back-end</em> dans un premier temps. La plupart du temps cela va se résumer à optimiser la base de données, les requêtes, les indexes, etc.
Une fois ceci fait, on peut s'intéresser à l'optimisation <em>front-end</em>. Là aussi des outils peuvent nous aider, Chrome Dev Tools par exemple, ou imageoptim.com, pour améliorer la compression des images.</p>

<p>Une session intéressante, mais qui ne va pas à mon goût assez loin dans les détails. Les solutions proposées restent assez basiques au final.</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_java/2013/10/25/02-Golo.html">Golo, le langage qui donne des super-pouvoirs</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/philippe-charriere.html">Philippe Charrière</a> (<a href="https://twitter.com/k33g_org">@k33g_org</a>)</p>

<p><img src="/images/note-3.5.png" title="3.5/5" alt="3.5/5" /></p>

<p>Mais qu'est-ce que <strong>Golo</strong>, ce langage au nom rigolo ?
C'est un langage créé par Julien Ponge (@jponge) qui tourne sur la JVM, avec Java 7 ou 8 (pas avant, car Golo nécessite <code>invokedynamic</code> pour tourner, introduit en Java 7).
Ses principales forces sont sa simplicité, sa légèreté ainsi que la facilité d'étendre le langage.</p>

<p>Philippe nous montre quelques exemples de code, la syntaxe reste assez compréhensible pour un développeur Java.
Les lambdas, qui se font toujours attendre dans Java, sont là, tout comme les structures, des objets créés dynamiquement (<code>ObjectDynamic</code>) ou encore la possibilité d'étendre (<code>augment</code>) des classes existantes pour leur ajouter des fonctionnalités.</p>

<p>Je vous invite à aller jeter un oeil sur le site du langage - <a href="http://golo-lang.org">http://golo-lang.org</a> - pour vous rendre compte de ce qu'offre ce langage, et voir quelques exemples concrets de code. Voilà un basique <em>Hello World</em> :</p>

<p>```
module EchoArgs</p>

<p>function main = |args| {</p>

<pre><code>println("Hello World...")
foreach arg in args {
  println("-&gt;  " + arg)
}
</code></pre>

<p>}
```</p>

<p>J'ai aimé cette présentation, qui nous a donné un bon aperçu de ce qu'est Golo.
Toutefois, cela reste un langage dont le but m'échappe un peu - hormis le côté "fun" d'avoir créer son propre langage !</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_mobile/2013/10/25/3-Mobile-troll-party.html">Mobile Troll Party</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/xavier-bourguignon.html">Xavier Bourguignon</a> (<a href="https://twitter.com/xbourguignon">@xbourguignon</a>)</p>

<p><img src="/images/note-3.png" title="3/5" alt="3/5" /></p>

<p><img src="/images/softshake-2013-mobile-troll-party.jpg" title="Une session pleine de violences" alt="Une session pleine de violences" /></p>

<p>Une session pour le fun. Le but ici est de troller sévèrement sur iOS et Android.
Je m'attendait à un peu plus de trash, un peu plus de sujets polémiques. Le jeu des deux présentateurs n'était peut-être pas assez rodé je pense, mais d'après ce que j'ai compris, Xavier devait la faire seul jusqu'à la veille au soir où il a réussi à convaincre son partenaire de venir aussi.
Malgré tout, c'était une bonne ambiance, et les trolls étaient effectivement nombreux !</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_agile/2013/10/25/4-5-ans-et-500-releases-en-50-minutes.html">5 ans, 500 releases en 50 minutes</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/25/freddy-mallet.html">Freddy Mallet</a> (<a href="https://twitter.com/FreddyMallet">@FreddyMallet</a>) et <a href="http://soft-shake.ch/2013/program/authors/2013/10/24/olivier-gaudin.html">Olivier Gaudin</a> (<a href="https://twitter.com/gaudol">@gaudol</a>)</p>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>Compte tenu du temps imparti (45 minutes), cette session a été renommée "<em>4 ans, 400 releases en 40 minutes</em>" :)
Cette session raconte la vie de la société SonarSource, éditeur de l'outil d'analyse de code SonarQube (connu anciennement simplement sous le nom Sonar).</p>

<p>Lorsque SonarSource a été créée, il y a 5 ans, c'était une petite startup lancée par trois personnes (en particulier Olivier et Freddy), sur leurs fonds propres. La société marche bien aujourd'hui, et a bien grossi (une 20aine de personnes d'ici la fin de l'anée), mais il y a eu beaucoup de problèmes, de "douleurs". En particulier 5 :</p>

<ul>
<li>Les tests.</li>
<li>L'architecture.</li>
<li>L'infrastructure.</li>
<li>L'organisation.</li>
<li>Sonar on Sonar.</li>
</ul>


<p>Un gros travail a été fait sur les tests. Les tests unitaires d'abord, mais aussi les tests d'intégration. Le fait que Sonar supporte 5 bases de données différentes, qu'il existe une soixante de plugins ne rend pas les choses simples. Toutefois, ils arrivent à tout tester de façon assez efficace.</p>

<p>Initialement, HibernateORM et GWT avaient été choisis. Le premier car gérer 5 bases de données et autant de spécificités n'est jamais aisé. Le second, car à l'époque cela répondait bien aux besoins de l'équipe. Mais ces choix se sont finalement avérés être des maillons faibles, et progressivement ont été remplacés.</p>

<p>Les développeurs ne font pas que des développements, il a fallu embaucher une personne dédiée à part entière pour gérer l'infrastructure et les releases. Mais un tel cloisonnement n'est jamais très efficace, et SonarSource a ainsi créer une équipe de "DevOps".</p>

<p>Afin de ne pas être désynchroniser avec les utilisateurs de l'outil, l'équipe de SonarSource utilise SonarQube directement. Le fameux principe du "<em>Eat your own dog food</em>" en somme. Ils ont ainsi une instance de "production" interne pour laquelle ils font des releases toutes les semaines. Cela implique donc d'être capable de faire des releases presque tous les jours, les développements de type "big bang" sont donc exclus.</p>

<p>Un dernier point abordé par Freddy et Olivier concerne le <em>Quality Gate</em> (un sujet qui mériterait sans doute une session à part entière). Il s'agit d'une sorte de contrat de qualité pour pouvoir faire une release. En gros, il faut respecter certaines règles, atteindre certains objectifs pour engager la release : par exemple, avoir clos tous les tickets JIRA, avoir une note SQALE de A (la meilleure), ne pas avoir de violations bloquantes ou critiques, ou même de violations non revues par l'équipe.</p>

<h2>Bilan</h2>

<p>Au final, ce sont deux très belles journées qui viennent de s'écouler.
La qualité des présentations et le niveau des speakers sont très bons.</p>

<p>Les plus :</p>

<ul>
<li>Du beau monde. C'est toujours un plaisir de revoir des gens qu'on apprécie, et de rencontrer physiquement des personnes que l'on ne connait que par Twitter.</li>
<li>De bons sujets.</li>
<li>Des tracks très variés : Java, agilité, web, mobile, IA/Robotique, BigData et NoSQL, Microsoft, Ruby on Rails.</li>
<li>Le repas des speakers (miam miam la fondue !)</li>
<li>Genève, très jolie ville.</li>
<li>Les organisateurs, très accueillants et toujours disponibles.</li>
<li>Les dessins en live des sessions (voir prochain billet).</li>
</ul>


<p>Les moins :</p>

<ul>
<li>La séparation des salles. Elles se trouvaient soit au 1e étage, soit au 5e. Changer de salle pouvait ainsi demander un peu de gymnastique !</li>
<li>A peu de choses près, les mêmes repas le midi sur les deux jours. Un peu plus de variété aurait été appréciable. Pas de problème au niveau de la quantité toutefois.</li>
<li>J'aurais bien aimé que SoftShake se tienne en hiver, Genève sous la neige doit être très agréable.</li>
</ul>


<p>Pour résumer, Soft Shake est une très belle conférence, dans l'esprit de Devoxx ou Mix-IT. J'y retournerais avec grand plaisir !</p>
]]></content>
  </entry>
  
</feed>
