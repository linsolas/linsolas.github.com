<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: java | fr.romain:blog:3.0]]></title>
  <link href="http://linsolas.github.com/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://linsolas.github.com/"/>
  <updated>2013-11-15T12:46:27+01:00</updated>
  <id>http://linsolas.github.com/</id>
  <author>
    <name><![CDATA[Romain Linsolas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Devoxx 2013 - dernier jour et bilan]]></title>
    <link href="http://linsolas.github.com/blog/2013/11/15/devoxx-2013-dernier-jour-et-bilan/"/>
    <updated>2013-11-15T00:27:00+01:00</updated>
    <id>http://linsolas.github.com/blog/2013/11/15/devoxx-2013-dernier-jour-et-bilan</id>
    <content type="html"><![CDATA[<p><img src="/images/devoxx_logo.gif" title="Devoxx 2013" alt="Devoxx 2013" /></p>

<p>La dernière journée à Devoxx est toujours un peu spéciale. Beaucoup moins de monde, moins de sessions aussi, on sent que la fin est là !
Pour cette dernière journée, comme habituellement pour chaque Devoxx (France ou Belgique), je termine par l'enregistrement du podcast des CastCodeurs.</p>

<!-- more -->


<p>J'ai commencé la journée avec <a href="http://devoxx.be/dv13-scott-kurz.html?presId=3728">Batch applications for the Java platform (JSR 352)</a>, mais entre la fatigue des deux derniers jours et les slides bien trop chargés, j'ai eu du mal à suivre. Donc si vous voulez en savoir plus, je vous invite à regarder la <a href="http://jcp.org/en/jsr/detail?id=352">JSR 352</a> :)</p>

<h2><a href="http://devoxx.be/dv13-vincent-massol.html?presId=3430">Enregistrement live des CastCodeurs</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>Ma seule et unique session en français (la seule de la conférence d'ailleurs) : l'enregistrement live du <a href="http://lescastcodeurs.com/">Podcast des CastCodeurs</a>. Une analyse toujours fine et délicate de la conférence qui est en train de s'achever.
Je vous laisserais écouter cet épisode qui sera bientôt disponible sur le site. D'ailleurs, bientôt la 100e. Ce sera d'ailleurs peut-être pour Devoxx Anvers 2014, qui sait.</p>

<p><img src="/images/devoxx2013-castcodeurs.jpg" title="Les CastCodeurs sur scène" alt="Les CastCodeurs sur scène" /></p>

<h2><a href="http://devoxx.be/dv13-jean-franois-denise.html?presId=3759">Avatar.js, Server-Side JavaScript on the Java Platform</a></h2>

<p><img src="/images/note-2.png" title="2/5" alt="2/5" /></p>

<p>Finissons ce Devoxx par la présentation de <a href="http://devoxx.be/dv13-jean-franois-denise.html">Jean-François Denise</a> sur <a href="https://avatar-js.java.net/">Avatar.js</a>.</p>

<p>Il s'agit d'un framework JavaScript côté serveur qui tourne sur la JVM et est une combinaison de :</p>

<ul>
<li>d'une inspiration de Node pour son modèle orienté événement, son système de modules et de son API.</li>
<li>utilisation du moteur JavaScript de Nashorn.</li>
<li>l'API de de la plateforme Java.</li>
</ul>


<p>Le but n'est pas de copier Node, mais plutôt d'en créer une compatible avec lui. Prendre le meilleure des deux mondes en quelque sorte.
La syntaxe s'approche de celle de Node, comme par exemple :</p>

<p>``` javascript
var fs = require('fs')
fs.readdir('/Documents/images', function(err, files) {</p>

<pre><code>files.map(function(imgFile) {
    var file = new java.util.File(imgFile);
    var img = javax.imageio.ImageIO.read(file);
    ...
})
</code></pre>

<p>})
```</p>

<p>Démarrer un serveur peut se faire directement en ligne de commandes, ou encore via quelques lignes de code :</p>

<p><code>java
String[] args = { "./myscript.js" };
Server server = new Server(args);
server.run(args);
</code></p>

<p>Avatar.js vient aussi avec Avatar EE. Et là, je commence à me poser des questions.
Il faut noter qu'Avatar.js n'est pas encore finalisé, et son API peut également être amenée à changer...</p>

<p>Jean-Baptiste passe ensuite à une démo d'application d'upload de photos en Avatar.js, avec l'aide d'Express, des WebSocket, de java.sql et de javax.imageio. Ah non, en fait de démo, il s'agit de slides qui montrent du code. Argh</p>

<p>J'avoue ne pas être vraiment emballé par ce projet, bien qu'avoir une passerelle entre Node.js et Java peut être intéressant. De plus ne pas voir une <em>vraie</em> démo m'a quand même déçu !</p>

<h2>Bilan</h2>

<p>Pour ma deuxième année à Anvers, la magie est toujours là. Cela reste l'une des meilleures conférences du monde sur le domaine du Java, avec des stars et des présentations de qualité.
Je dirais quand même que j'ai préféré Devoxx 2012 à la version 2013, mais cela est peut-être aussi lié au fait que l'année dernière, il y avait en plus l'excitation de découvrir cette conférence pour de vrai.</p>

<p>Bref, je reviendrais à Anvers en 2014 si j'en ai la possibilité, et ce sera peut-être pour faire une conférence, qui sait.</p>

<p>Donc les aspects positifs :</p>

<ul>
<li>La qualité des présentations et des orateurs.</li>
<li>Une organisation au poil, et c'est du sacré boulot !</li>
<li>Les gens, les amis que l'on revoit ou que l'on se fait. Les rencontres donc.</li>
<li>Les stands, il y en a pas mal, ils sont plutôt bien achalandés, et certains offrent des goodies sympas.</li>
<li>A boire. On peut toujours boire, c'est toujours bien fourni, et parfois de la bière est offerte par un stand ou Atlassian.</li>
<li>Le bracelet, toujours aussi pratique.</li>
<li>Le système de vote à la sortie des salles (comme en 2012).</li>
<li>Le film du jeudi soir (avec les popcorns), même si je ne l'ai pas tellement apprécié ("<em>Le Cartel</em>" ou "<em>The Counselor</em>" en VO), je trouve que c'est quand même top comme idée.</li>
<li>Le site <a href="http://www.parleys.com">Parleys</a> qui héberge(ra) les sessions, toutes filmées (sauf, hélas, les Quickies et donc le mien)</li>
</ul>


<p>Les moins, ou les points d'amélioration :</p>

<ul>
<li>La nourriture. Je ne me souviens pas d'avoir super bien mangé à Devoxx 2012, mais j'ai vraiment l'impression que cette année c'était pire. Le mercredi midi c'était juste un sandwich, rien de folichon. Le lendemain, c'était une salade assez étrange (en gros, un sacré mélange), ce qui m'a fait finir au Quick. En dehors de ça, point de salut. Quelques gâteaux ont été jetés en pature à la foule affamée vers 16h, mais franchement, il y a un très gros axe d'amélioration sur ce point-là !</li>
<li>Le système de vote qui mériterait d'être mieux utilisé. En gros, il ne sert qu'à faire un "Top 3" des meilleures sessions du jour ou de la conférence entière. Il serait bien de fournir le score au speaker à la fin de la conférence, pour avoir une évaluation directe du ressenti des spectateurs.</li>
<li>Contrairement à l'année passée où j'avais eu la "révélation Angular", cette année pas de "<em>Kick-ass</em>" présentations. Mais le niveau reste élevé, ne me faites pas dire ce que je ne dis pas :)</li>
</ul>


<p>Vivement 2014 :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Devoxx 2013 - deuxième jour]]></title>
    <link href="http://linsolas.github.com/blog/2013/11/14/devoxx-2013-deuxieme-jour/"/>
    <updated>2013-11-14T09:50:00+01:00</updated>
    <id>http://linsolas.github.com/blog/2013/11/14/devoxx-2013-deuxieme-jour</id>
    <content type="html"><![CDATA[<p><img src="/images/devoxx_logo.gif" title="Devoxx 2013" alt="Devoxx 2013" /></p>

<p>Voici la deuxième journée à Devoxx version 2013.
Pour commencer la journée, la Keynote de Google annonce la sortie de la version 1.0 du langage <a href="https://www.dartlang.org/">Dart</a>.
Dart est le langage créé par Google au dessus de JavaScript afin de rendre ce dernier plus utilisable, en offrant pas mal de choses des langages Java ou C# comme les classes, un vrai développement orienté objet, etc.</p>

<p>Il a aussi été question du projet <a href="https://github.com/angular/angular.dart">Angular Dart</a>, une implémentation d'<a href="http://angularjs.org/">Angular</a> sur le language Dart.</p>

<!-- more -->


<h2><a href="http://devoxx.be/dv13-francesc-campoy-flores.html?presId=3493">Go see all the ships in the world</a></h2>

<p><img src="/images/note-3.5.png" title="3.5/5" alt="3.5/5" /></p>

<p>On parle beaucoup du Big Data. C'est souvent théorique, ou à des exemples qui ne semblent pas très parlants.
<a href="https://twitter.com/@francesc">Francesc Campoy Flores</a> nous propose une session où nous devrions avoir au final une visualisation dynamique de la position et trajectoires de tous les bateaux du monde ! Cela s'annonce intéressant d'un point de vue technique, et quelque peu exotique quant au contenu.</p>

<p>Parlons tout d'abord des données. Nous avons 75,000 bateaux (en éliminant les petits bateaux). Il faut donc d'abord récupérer ces données.
Les bateaux disposent d'un système appelé <a href="http://en.wikipedia.org/wiki/Automatic_Identification_System">AIS</a> (<em>Automatic Identification System</em>), une sorte de GPS avant l'heure pour les navires. Toutefois, ce type de protocole est peu fiable, et difficile à gérer.</p>

<p>Il faut donc stocker toutes ces données. Bien entendu, il fait appel au cloud de Google pour cela.
Le problème qui se pose aussi est la tête des données AIS, qui ne ressemble à pas grand chose :</p>

<p><img src="/images/devoxx2013-boats1.jpg" title="Les données AIS" alt="Les données AIS" /></p>

<p>Il existe toutefois une librairie en C++ qui permet d'interpréter ces données. Le seul hic, c'est que le cloud de Google ne permet pas d'exécuter du C++. Il faut donc écrire un traducteur vers du CSV pour finalement restocker ces informations dans ce format plus pratique.</p>

<p><a href="https://developers.google.com/bigquery/">BigQuery</a> est ensuite utilisé pour extraire les informations de toutes ces données. Une requête assez basique pour récupérer les positions moyennes des bateaux prend 5.8s sur 14Go de données.</p>

<p>Il faut maintenant servir ces données, de façon rapide et dynamique. Pour cela, Fransesc utilise l'API REST de BigQuery depuis du JavaScript. Toutefois, il inclut une application herbergée sur AppEngine entre le browser et le serveur BigQuery. En effet, on risque sinon de trop faire jouer le cache de ce dernier et du coup ne pas avoir les dernières données disponibles.
Cette application va matérialiser les requêtes, ainsi qu'une gestion du cache (memcache). Cette application est développée avec le langage Go, pour ses performances.</p>

<p>Voilà l'architecture finale du système. Pas si simple !</p>

<p><img src="/images/devoxx2013-boats2.jpg" title="L'architecture pour voir les bateaux" alt="L'architecture pour voir les bateaux" /></p>

<p>Et le résultat, basée sur Google Maps API, WebGL et CanvasLayer montre tout d'abord une floppée de points sur une carte (75,000 quand même). Puis, en utilisant les données disponibles, ces points sont colorés en fonctin de leur vitesse. Ce calcul est fait par le GPU. On laisse le CPU - peu utilisé autrement - calculer l'histogramme donnant la répartition des vitesses :</p>

<p><img src="/images/devoxx2013-boats3.jpg" title="Coloration en fonction de la vitesse" alt="Coloration en fonction de la vitesse" /></p>

<p>Une coloration en fonction de l'orientation du bateau montre très bien les différents canaux de navigation, comme par exemple autour de l'Espagne.</p>

<p><img src="/images/devoxx2013-boats4.jpg" title="Coloration en fonction de l'orientation" alt="Coloration en fonction de l'orientation" /></p>

<p>Et au final :</p>

<p><img src="/images/devoxx2013-boats5.jpg" title="La représentation des bateaux sur une carte" alt="La représentation des bateaux sur une carte" /></p>

<p>Une présentation tout à fait intéressante pour comprendre la démarche du traitement de ces données. Seul bémol, je m'attendais à un peu de live coding ou tout du moins une démo du résultat (plutôt qu'une vidéo). Mais il est vrai que le nombre de données assez important ainsi qu'un WIFI un peu à la ramasse aurait risqué de casser un peu l'expérience.</p>

<h2><a href="http://devoxx.be/dv13-igor-minar.html?presId=3468">What is in store for the future of Angular</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>AngularJS avait été <a href="">ma claque et ma découverte</a> de Devoxx 2012. Depuis, le framework est devenu très populaire, et plusieurs sessions ont déjà eu lieu à Devoxx 2013, toutes blindées.
<a href="https://twitter.com/@IgorMinar">Igor Minar</a> et <a href="https://twitter.com/@mhevery">Misko Hevery</a>, deux des principaux membres du projet, viennent nous parler de ce qui attend Angular pour l'année 2014.</p>

<p>La première chose de prévue pour Angular, c'est de se baser encore plus sur les standards, en particulier les <em>web components</em>, qui inclut :</p>

<ul>
<li>Shadow DOM</li>
<li>Custom elements, <code>document.register()</code></li>
<li>Templates</li>
<li>Scoped CSS</li>
</ul>


<p>Autre point, c'est l'utilisation du <code>Object.observe</code> qui permettra de meilleures performances que le <em>dirty checking</em> d'Angular. L'autre avantage de cette méthode est qu'elle est asynchrone.</p>

<p>Asynchrone DI (<em>Dependency Injection</em>) vs AMD (<a href="http://en.wikipedia.org/wiki/Asynchronous_module_definition">Asynchronous Module Definition</a>).</p>

<p>L'introduction des <strong>zones</strong> va permettre de supprimer <code>$apply</code> et <code>$digest</code>.</p>

<p><img src="/images/devoxx2013-angularjs-zones.jpg" title="Les zones d'Angular" alt="Les zones d'Angular" /></p>

<ul>
<li><code>DefaultZone</code> se comporte comme le navigateur.</li>
<li><code>StackTraceZone</code> permet des stacktraces plus longues.</li>
<li><code>AngularZone</code> applique le data-binding.</li>
<li><code>MockZone</code> pour faciliter les tests.</li>
</ul>


<p>Angular va également profiter des nouveautés d'EcmaScript 6, en particulier les classes et les modules.
Il sera également possible d'utiliser des annotations dans le code Angular.</p>

<p><img src="/images/devoxx2013-angularjs-annotations.jpg" title="Les annotations en Angular" alt="Les annotations en Angular" /></p>

<p>Les <strong>contrats</strong> font également leur apparition dans Angular :</p>

<p><img src="/images/devoxx2013-angularjs-contracts.jpg" title="Les contrats en Angular" alt="Les contrats en Angular" /></p>

<p>Bref, je laisse les présentateurs résumer à ma place :</p>

<p><img src="/images/devoxx2013-angularjs-summary.jpg" title="Résumé des nouveautés d'Angular" alt="Résumé des nouveautés d'Angular" /></p>

<p>La présentation était moins éclatante que l'année passée, mais forcément le sujet s'y prétait moins. Toutefois, cela montre qu'Angular a encore de beaux jours devant lui !</p>

<h2><a href="http://devoxx.be/dv13-romain-linsolas.html?presId=3545">The ingredients for a perfect JavaScript Software Factory</a></h2>

<p><img src="/images/note-5.png" title="5/5" alt="5/5" /></p>

<p>(vous vous doutez bien que la note est ici tout à fait objective)
Là, c'est mon Quickie !
J'y parle de JavaScript et d'usine logicielle, en particulier d'outils.
Ma présentation est essentiellement divisée en trois parties. Compte tenu du temps imparti - à peine 15 minutes - il ne m'est pas possible d'aller pleinement dans les détails, mais l'idée est d'aborder les points principaux du sujet:</p>

<ul>
<li>Tout d'abord, j'insiste sur le fait qu'il faut réutiliser ce que l'on a déjà sous la main, selon le bon vieux principe du <em>Don't Repeat Yourself</em> (DRY). En effet, nous sommes généralement des développeurs Java, et disposons à ce titre d'une usine logicielle déjà performante. Réutilisons donc Jenkins, SonarQube, et consorts !</li>
<li>Ensuite, intéressons nous aux outils propres à JavaScript. Là, je m'arrêtre surtout sur <a href="http://yeoman.io/">Yeoman</a>, c'est-à-dire <a href="https://github.com/yeoman/yo">Yo</a> pour créer des squelettes d'applications, <a href="http://bower.io/">Bower</a> pour gérer les dépendances et le packaging et enfin <a href="http://gruntjs.com/">Grunt</a>, un exécuteur de tâches (une sorte de Ant pour JavaScript, pour faire simple).</li>
<li>La dernière partie insiste sur le fait qu'une bonne usine logicielle n'est pas qu'une questions d'outils, mais aussi de bonnes pratiques. Et en terme de bonnes pratiques, les <em>tests</em> sont en première place. Je montre donc qu'il existe toutes sortes de librairies de tests en JavaScript, pour faire du test unitaire, du test fonctionnel, du BDD ou encore du test <em>front-end</em>.</li>
</ul>


<h2><a href="http://devoxx.be/dv13-dick-wall.html?presId=3713">Enregistrement live de JavaPosse</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>Le podcast de <a href="http://javaposse.com/">JavaPosse</a> est très connu et réputé. Comme chaque année, ils font un enregistrement live à Devoxx, à la manière des CastCodeurs.</p>

<p>Cette année, seule la moitié de l'équipe était présente, à savoir Chet Haase et Dick Wall. Du coup, la moitié des Cast Codeurs, avec Guillaume Laforge et Emmanuel Bernard est venue en renfort.</p>

<p><img src="/images/devoxx2013-javaposse.jpg" title="JavaPosse et les Cast Codeurs" alt="JavaPosse et les Cast Codeurs" /></p>

<p>Une session agréable, avec une session  avec de la bière offerte par Atlassian. Une fois de plus, merci à eux.</p>

<h2><a href="http://devoxx.be/dv13-andrzej-grzesik.html?presId=3500">Continuous Delivery antipatterns</a></h2>

<p><img src="/images/note-3.5.png" title="3.5/5" alt="3.5/5" /></p>

<p>A la SGCIB, nous sommes en plein dans le <em>Continuous Delivery</em>. Il me paraissait donc important de recueillir quelques nouveaux avis et de bons conseils. C'est dans ce but que j'assiste à la conférence de  <a href="http://devoxx.be/dv13-andrzej-grzesik.html">Andrzej Grzesik</a>.</p>

<p>Le problème est avant tout un problème de personnes, de process.
Il faut des dashboards, pour savoir qui (a) fait quoi.
Releases = risques. Il faut donc savoir les éviter (les risques, pas les releases !)</p>

<p>Paralléliser les releases. Mais quoi paralléliser ? A priori, tout est parallélisable. Le mieux est de voir ce qui est le plus pénible, le plus long à s'exécuter dans une release, et voir comment on peut le paralléliser.</p>

<p>Autre problème fréquent : des équipes indépendantes, qui ne se parlent pas (devs contre ops par exemple). Il faut restaurer un canal de discussion, de communication.</p>

<p>L'infrastructure manuelle.
Il faut tester aussi son infrastructure. Avec <a href="http://www.opscode.com/chef/">Chef</a> par exemple, il est possible de faire une sorte de TDD. <a href="http://acrmp.github.io/foodcritic/">Food critic</a> ou <a href="http://www.vagrantup.com/">Vagrant</a> peuvent également être utiles.</p>

<h2><a href="http://devoxx.be/dv13-shaun-smith.html?presId=3568">Practical RESTful persistence</a></h2>

<p><img src="/images/note-2.5.png" title="2.5/5" alt="2.5/5" /></p>

<p>Finalement, on change de sujet, pour aller voir <a href="https://twitter.com/@shaunmsmith">Shaun Smith</a> parler de la nouvelle fonctionnalité d'<a href="http://www.eclipse.org/eclipselink/">EclipseLink</a> de <a href="http://wiki.eclipse.org/EclipseLink/Development/2.4.0/JPA-RS">JPA-RS</a>, qui intgère JAX-RS, JAXB et JPA.
L'idée est ici de réaliser un binding entre des entités et du JSON entre autres via des annotations dans les entités.</p>

<p>Bon, j'avoue être passé à côté de cette session, je n'ai pas trop compris le pourquoi de tout ça.</p>

<p>Voilà, la deuxième journée s'achève avec encore de belles expériences (sauf gastronomiques !).
Demain sera plus calme, avec seulement une demi-journée de travail.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Devoxx 2013 - premier jour]]></title>
    <link href="http://linsolas.github.com/blog/2013/11/13/devoxx-2013-premier-jour/"/>
    <updated>2013-11-13T08:56:00+01:00</updated>
    <id>http://linsolas.github.com/blog/2013/11/13/devoxx-2013-premier-jour</id>
    <content type="html"><![CDATA[<p><img src="/images/devoxx_logo.gif" title="Devoxx 2013" alt="Devoxx 2013" /></p>

<p>Et voilà, ma deuxième expérience belge de Devoxx est entamée.</p>

<!-- more -->


<h2><a href="http://devoxx.be/dv13-sven-peters.html?presId=3143">How To Do Kick-Ass Software Development</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p><img src="/images/devoxx-2013-kickass.jpg" title="Kick-ass development" alt="Kick-ass Development" /></p>

<p>J'ai choisi cette présentation de <a href="https://twitter.com/@svenpet">Sven Peters</a> d'Atlassian, car j'avais beaucoup apprécié sa présentation l'année passée sur <a href="http://linsolas.github.io/blog/2012/11/18/devoxx-2012-jour-1/">7 things to make a good team great</a>. Il y présentait 7 trucs pour rendre une bonne équipe encore meilleure. C'est d'ailleurs lors de cette présentation qu'il m'est venue l'idée de mettre les <a href="http://www.brownbaglunch.fr">Brown Bag Lunch</a> à la SGCIB (via l'idée "<em>Feed you brain</em>"), peu de temps avant que ce mouvement ne prenne de l'ampleur en France.</p>

<p>Sven s'est intéressé au film <a href="http://www.imdb.com/title/tt1250777/">Kick-Ass</a>, où une personne quelconque souhaite devenir un super-héros, juste en portant un costume. Forcément, au début il se fait dérouiller, mais persiste. Et c'est le message de Sven : se prendre des gamèles, mais toujours se relever.</p>

<p>Mais que souhaite t-on atteindre avec son équipe ?</p>

<ul>
<li>un meilleur software ;</li>
<li>moins d'<em>overhead</em> ;</li>
<li>un développement plus rapide ;</li>
<li>des clients heureux ;</li>
<li>des développeurs heureux.</li>
</ul>


<p>Il y a quelques temps, la solution à tous les problèmes était l'agilité. Mais qu'en est-il en 2013 ?
Le problème de toute méthodologie ou technologie c'est qu'au début c'est super, mais très vite les soucis commencent à surgir, jusqu'à s'apercevoir que cette solution ne résoud pas tous les problèmes (voir la <a href="http://en.wikipedia.org/wiki/Hype_cycle">Gartner Hype Curve</a>).</p>

<p>Il faut toujours garder à l'esprit de construire la bonne chose ("<em>Building the right thing</em>").
Une idée est le "<em>Fake it til you make it</em>".
Sven nous montre l'exemple à ne pas suivre avec le <a href="http://en.wikipedia.org/wiki/Microsoft_Kin">téléphone Kin</a> de Microsoft. Censé être très adapté à la nouvelle génération, il fut un échec très retentissant, sorti de la vente à peine au bout de deux semaines, et aura fait perder plus d'un milliard de dollars à la firme !</p>

<p><img src="http://www.digitaltrends.com/wp-content/uploads/2010/06/043775-microsoft-kin.jpg" title="Microsoft Kin" alt="Image Microsoft Kin" /></p>

<p>A l'opposé, IBM a voulu tester une application de reconnaissance vocale.
Plutôt que de développer un système complexe, ils ont triché en mettant une personne réelle dont le rôle était d'exécuter les tâches dictées par un cobaye. L'expérimentation n'ayant pas convaincue, il fut décidé que l'application réelle ne serait pas développée.</p>

<p>Passons à l'importance du feedback. Celui-ci doit répondre à trois critères :</p>

<ul>
<li>facile à trouver ;</li>
<li>simple ;</li>
<li>rapide à soumettre.</li>
</ul>


<p>Il ne faut pas embêter directement les développeurs avec les feedbacks. Par exemple, pour l'équipe GMail, il y a 100 développeurs pour 425M utilisateurs. Imaginer que ce soit les développeurs qui traitent directement les feedbacks des utilisateurs. Le développement de l'application n'avancerait jamais.
Cependant, tous doivent être conscients de ce qui ne va pas.</p>

<p>Chaque jour, l'équipe d'Atlassian se réunit 45 minutes pour revoir ces feedbacks et en faire quelque chose de personnel.
De plus, chaque développeur passe une semaine par an au support de premier niveau, pour être en contact directement avec les problèmes des utilisateurs.</p>

<p>Autre point, ce qu'ils appellent le <em>Developer on Test</em>. Il s'agit de faire remplir le rôle de testeur aux développeurs.
Pour cela, six astuces :</p>

<ul>
<li>Le training. Comment penser comme un testeur ?</li>
<li>Faire du <em>pairing</em> entre un testeur et un développeur.</li>
<li><em>Blitz Test</em> : durant une journée, toute la compagnie - et pas seulement les développeurs et les testeurs - teste une nouvelle vesion.</li>
<li>Définir des recettes de tests.</li>
<li>Instaurere des sessions séparées : pendant une heure, deux équipes testent les mêmes choses, puis comparent leurs résultats.</li>
<li>La chasse aux bugs : pendant une semaine, un développeur est dédié à la chasse aux bugs sur tous les éléments marqués comme Terminés.</li>
</ul>


<p>Sven nous rappelle alors que "La qualité est la responsabilité de chacun".</p>

<p>Sven passe ensuite sur le design. A Atlassian, les développeurs font aussi du design.
Ils n'étaient pas forcément mauvais, mais cela avait tendance à partir dans tous les sens.
Ce dont ils ont besoin, c'est de lignes directrices, de <em>design guidances</em> (<a href="https://developer.atlassian.com/design">les guidlines de design d'Atlassian</a>).</p>

<p>Ils organisent également des workshops pour les développeurs.</p>

<p>Comme un développement complet requiert la collaboration de plusieurs départements, il est important de supprimer les frictions qui peuvent apparaitre entre eux.</p>

<p>Atlassian définit également des <em>guidelines</em> pour le développement. Ainsi, pour chaque tâche une branche est créée sur Git.
Leur durée de vie est ainsi très courte (environ 2 jours).
Puis, pour merger le code, ils passent par des <em>push requests</em>, ce qui fait que le nouveau code est revu et validé par ses pairs. Ce nouveau code n'est donc plus de la responsabilité d'un seul développeur.</p>

<p>Dernier point : l'automatisation. Le principe est d'échouer rapidement (<em>Fail fast</em>). 4 choses à retenir :</p>

<ul>
<li>Mettre à disposition les artifacts générés.</li>
<li>Paralleliser les tests pour les accélérer.</li>
<li>Avoir une stratégie de builds. Créer des couches de tests selon leur catégorie, leur intérêt.</li>
<li>Toujours avoir un oeil sur les statistiques. Savoir par exemple ce qui prend du temps sur un build, pour être en mesure de l'accélérer.</li>
</ul>


<p>Encore une belle présentation de Sven Peters.</p>

<h2><a href="http://devoxx.be/dv13-chet-haase.html?presId=3193">Patterns, Shmatterns</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>Pourquoi cette présentation ? Tout simplement pour son orateur, <a href="https://twitter.com/@chethaase">Chet Haase</a>. L'année passée, il avait aussi présenté un Quickie (<a href="">The Future of Software Development Process Methodology Effectiveness</a>) qui avait été un beau succès.</p>

<p>Encore une fois, la salle était comble. Chet Haase a cette fois-ci passé en revue un certain nombre de patterns et les a comparé avec ses propres patterns, ce qui en faisait quelque chose d'assez drôle.</p>

<p><img src="/images/devoxx-2013-chethaase.jpg" title="Le design pattern Refactory" alt="Le design pattern Refactory" /></p>

<h2><a href="http://devoxx.be/dv13-sven-peters.html?presId=3144">Don't use Git</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>A nouveau, <a href="https://twitter.com/@svenpet">Sven Peters</a> sur la scène. Le titre de la conférence peut paraître provocateur, tant Git est utilisé partout (Atlassian a même Stash dans son catalogue, un gestionnaire de repositories Git).
Mais cela est en fait une façon de promouvoir ce système de gestion de sources.</p>

<p>Sous le ton de l'ironie, Sven essaie de démonter les arguments qui font de Git un vrai succès. Git permet de travailler en mode déconnecté ? Mais c'est la fin du travail collaboratif ! Git rend les merges faciles et presque automatiques ? Mais le travail de merge sur SVN est une ôde à la cohésion d'équipe...</p>

<p>Bien entendu, tout cela n'est que prétexte pour montrer en quoi Git est supérieur aux anciens gestionnaires de sources comme SVN.</p>

<h2><a href="http://devoxx.be/dv13-nikolay-chashnikov.html?presId=3772">Efficient coding in IntelliJ IDEA</a></h2>

<p><img src="/images/note-2.png" title="2/5" alt="2/5" /></p>

<p><a href="http://devoxx.be/dv13-nikolay-chashnikov.html?presId=3772">Nikolay Chashnikov</a> est aux commandes pour nous montrer comment bien maitriser son IDE IntelliJ IDEA de JetBrains.
Après pas mal d'essais ratés, je suis finalement passé définitivement sur cet IDE depuis un an, et clairement, je ne reviendrais pas en arrière. Mais je suis conscient de n'utiliser qu'une toute petite partie des capacités de l'outil. J'attends donc de cette session qu'elle me donne plein de bons conseils.</p>

<p>Hélas, je resterais sur ma faim. Une bonne première partie de la session montre surtout les capacités d'autocomplétion proposées par IntelliJ. Le reste est avant tout la découverte (ou non) d'un certain nombre de raccourcis claviers. Bref, pas grand chose à se mettre sous la dent, si ce n'est 2 ou 3 nouveaux raccourcis. C'est chez payé pour une conférence d'une heure !</p>

<p>Je pense que cette session peut être intéressante pour une personne utilisant Eclipse et souhaitant comprendre pourquoi IntelliJ est si puissant. Mais pour un utilisateur d'IntelliJ, même un non expert comme moi, peu d'informations à en tirer. Dommage.</p>

<h2><a href="http://devoxx.be/dv13-tugdual-grall.html?presId=3281">Elastify your app: from SQL to NoSQL in less than one hour!</a></h2>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>J'avais déjà assisté à cette présentation <a href="">lors de Devoxx France 2013</a>, toujours faite par <a href="https://twitter.com/@tgrall">Tugdual Grall</a> et <a href="https://twitter.com/@dadoonet">David Pilato</a>.
Je me suis dit que j'allais quand même y jeter un oeil pour mieux l'apprécier.</p>

<p><img src="/images/devoxx-2013-elastify.jpg" title="Elastify your application" alt="Elastify your application" /></p>

<p>N'hésitez pas à relire <a href="http://linsolas.github.io/blog/2013/03/28/devoxx-france-2013-jour-2/">mon résumé lors de Devoxx France 2013</a>.</p>

<h2><a href="http://devoxx.be/dv13-attila-szegedi.html?presId=3732">The Curious Case of JavaScript on the JVM</a></h2>

<p><img src="/images/note-3.png" title="3/5" alt="3/5" /></p>

<p>J'aime Java, j'aime le JavaScript. Je me dis qu'une session mélangeant les deux pourrait être intéressante.
Je me décide donc d'aller voir ce qu'en dit <a href="https://twitter.com/@szegedi">Attila Szegedi</a>.
Il y était question de <a href="http://openjdk.java.net/projects/nashorn/">Nashorn</a>, qui est l'implémentation d'un <em>runtime</em> JavaScript hautes performances sur la JVM.</p>

<p>En gros, on écrit du JavaScript mélangé à du Java - à moins que ce ne soit l'inverse ? A noter que Nashorn devrait être <em>normalement</em> inclus dans le JDK 1.8.</p>

<p>J'ai un peu de mal à voir l'intérêt de ce mélange, mais pourquoi pas. C'est aussi ce genre de chose qui fait la richesse de la plateforme de la JVM :)</p>

<p>Voilà une première journée déjà bien intéressante, j'attends avec impatience la deuxième fournée de conférences, qui s'annonce de belle qualité.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Devoxx France 2013 - Bilan]]></title>
    <link href="http://linsolas.github.com/blog/2013/04/02/devoxx-france-2013-bilan/"/>
    <updated>2013-04-02T23:23:00+02:00</updated>
    <id>http://linsolas.github.com/blog/2013/04/02/devoxx-france-2013-bilan</id>
    <content type="html"><![CDATA[<p><img src="http://www.devoxx.com/download/attachments/6816022/DevoxxFR-2012-web-400-267.png" title="Devoxx France 2013" alt="Devoxx France" /></p>

<p>L'édition française de Devoxx 2013 s'est donc achevée la semaine dernière. A nouveau, un énorme <strong>BRAVO</strong> à toute l'équipe organisatrice, aux sponsors, aux speakers, aux participants. C'était magique. Devoxx, c'est un peu le Disneyland du développeur geek. On y voit des "stars" (pas dans le mauvais sens du terme) et on s'amuse énormément.</p>

<p>Allez, un petit bilan personnel :</p>

<h3>Les plus</h3>

<ul>
<li>Les gens.</li>
<li>L'organisation, toujours au poil.</li>
<li>L'équipe des organisateurs, toujours gentils et disponibles.</li>
<li>Les rencontres, surtout voir en vrai des personnes que l'on ne connait que <em>via</em> Twitter.</li>
<li>Les présentations de qualité, plutôt variées et nombreuses.</li>
<li>Les gens.</li>
<li>Certains goodies. Personnellement, j'en ai un peu marre des t-shirts (sauf celui d'Atlassian qui est au top, et que je portais durant ma présentation) et des mugs. Certains sponsors innovent plus que d'autres en la matière : boite à Meuh d'OCTO, décapsuleurs, gants, etc.</li>
<li>Les concours, bien que je n'ai rien gagné !</li>
<li>Le site de Parleys qui diffuse toutes les sessions que l'on a dû rater parce que parfois c'était dur de choisir, ou que l'on discutait avec des personnes. En plus, le site a été refait en HTML 5 !</li>
<li>Le diner des speakers.</li>
<li>La soirée "<em>Meet &amp; greet</em>".</li>
<li>Les gens.</li>
</ul>


<h3>Les moins</h3>

<ul>
<li>Pas assez de <em>Hands On</em> le mercredi. Comme je l'ai dit, j'aimerais beaucoup que Devoxx France 2014 se déroule en quatre jours : 2 jours d'universités et Labs avec une attention particulière pour les sessions où l'auditoire code vraiment, et 2 jours de conférences.</li>
<li>Le Marriott devient trop petit. L'année passée, avec un peu plus de 1200 personnes, on se sentait à l'étroit. Cette année, avec 1400 et quelques participants, c'était encore plus vrai. De nombreuses personnes se sont faites recaler à l'entrée des salles de conférences pleines pour des raisons de sécurité. Cela se comprend, mais c'est rageant. Le problème est de trouver un lieu ayant une capacité d'accueil d'au moins 1500 personnes à Paris pour un budget raisonnable. Difficile à mon avis !</li>
<li>La nourriture le midi. Sans être mauvaise, ce n'était quand même pas ça, et ça manquait un peu de variété. En plus, sauf erreur de ma part, il n'y avait pas de desserts le midi. A noter que cette année, contrairement à 2012, les boissons étaient toujours à disposition et ça c'est bien (petit bémol : pas de Coca light, que du Coca "normal" :o) ).</li>
<li>Toujours pas de NAO à gagner :)</li>
<li>Faute de place, les BOF sont toujours un peu tard le soir (certains finissent à 22h). Guère pratique quand on a déjà 2 jours de Devoxx dans les pates !</li>
</ul>


<p>Voilà, hormis le problème du lieu qui devient trop petit, rien de méchant. Devoxx confirme qu'il s'agit d'une superbe conférence, et encore une fois, j'étais très fier d'y assister, surtout en tant que speaker ! A l'année prochaine (et en fin d'année pour la version World à Anvers) !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Devoxx France 2013 - Jour 3]]></title>
    <link href="http://linsolas.github.com/blog/2013/03/29/devoxx-france-2013-jour-3/"/>
    <updated>2013-03-29T09:17:00+01:00</updated>
    <id>http://linsolas.github.com/blog/2013/03/29/devoxx-france-2013-jour-3</id>
    <content type="html"><![CDATA[<p><img src="http://www.devoxx.com/download/attachments/6816022/DevoxxFR-2012-web-400-267.png" title="Devoxx France 2013" alt="Devoxx France" /></p>

<p>Aie, déjà le dernier jour de la conférence Devoxx France. Que le temps passe vite ! Cette dernière journée reste toutefois très intense, en particulier parce qu'à 10h40, c'était ma présentation "<em>Du JavaScript propre ? Challenge Accepted!</em>" avec Julien Jakubowski. Je ferais un billet dédié à cette présentation.</p>

<!-- more -->


<h3><a href="http://www.devoxx.com/display/FR13/Web+Oriented+Architecture%2C+une+transmutation+des+pratiques+de+construction+des+SI">Web oriented architecture, une transmutation des pratiques de construction des SI</a></h3>

<p>J'avais raté les keynotes du jeudi, je me suis dit qu'il serait dommage d'en faire autant le vendredi. Bon, j'ai raté une partie de la première keynote, celle d'<a href="http://www.devoxx.com/display/FR13/Alexis+Moussine-pouchkine">Alexis Moussine-Pouchkine</a>, "<a href="http://www.devoxx.com/display/FR13/Normal+ou+decafeine">Normal ou décafeiné</a>". En gros, le message de sa keynote est que l'avenir, en particulier le Cloud, peut - et doit - se faire avec Java.</p>

<p>Passons à la deuxième keynote, celle de <a href="http://www.devoxx.com/display/FR13/Habib+Guergachi">Habib Guergachi</a>, CEO de <a href="http://zenexity.com/">Zenexity</a>. Je voulais la voir car il l'avait <a href="http://www.parleys.com/#play/5148922a0364bc17fc56c738">déjà jouée l'année passée</a> sous forme de conférence, et j'avais entendu d'excellents retours. Au delà du message, c'est vraiment le bonhomme qui impressionne. Il avait une telle énergie que cela en devenait contagieux. Rien de mieux pour bien démarrer une journée intense !</p>

<p>Revenons au message lui-même. Il est un peu polémique, mais je crois qu'il n'a pas complètement tort sur un certain nombre de choses.</p>

<p>Quand il s'agit de faire un choix important, il y a deux solutions possibles. On peut opter et pousser le changement, au risque d'innover. Certes, il y a le risque de se faire virer, mais ce sera dans la gloire :) L'autre chemin, c'est la soumission, et ne pas bousculer les choses établies. On ne risque pas de se faire virer à court terme, mais peut-être que dans 2 ans, on vous reprochera de ne pas avoir sû anticiper le changement, et vous vous ferez virer dans la honte !</p>

<p>Ok, c'est une vision un peu simpliste, mais y a un soupçon de vérité là-dedans quand même.</p>

<p>Habib, au cours de sa présentation, parle de <a href="http://www.playframework.com/">Play</a>. Bien entendu, il prêche pour sa paroisse, Zenexity est l'éditeur du framework. Il s'agit d'une innovation française. Pourtant, au début c'était plutôt un défaut, que ce soit pour les français (qui ne jurent que par des produits américains) ou par les américains eux-mêmes. Utiliser une technologie française c'est un peu comme voler dans un avion congolais : ça ne rassure pas vraiment ! Pourtant, Play! a été adopté par de grands noms (surtout américains), comme LinkedIn, Typesafe, etc. Dès lors, tout le monde, y compris les français, encense le framework.</p>

<p>On ne peut pas tout comprendre, il faut savoir se concentrer sur un problème précis, un petit bout d'une architecture entière. Et si l'on se jette à l'eau, que l'on prend le problème à bras le corps, peut-être que l'on sera la personne qui a vraiment sû comprendre et aborder ce problème, et que la solution que l'on proposera deviendra la solution que tout le mondre utilisera. Mais pour cela, il faut se lancer !</p>

<p>Pour résumer, la keynote de Habib Guergachi était pleine de panache, et donne à réflechir. Rien de mieux pour continuer la journée, surtout que la présentation suivante est celle de <a href="http://www.devoxx.com/display/FR13/Julien+Jakubowski">Julien Jakubowski</a> et... <a href="http://www.devoxx.com/display/FR13/Romain+Linsolas">moi-même</a>. J'y reviendrais très vite.</p>

<hr/>


<h3><a href="http://www.devoxx.com/display/FR13/Animez+vos+pages+HTML5++un+tour+d%27horizon+complet+des+techniques+d%27animation+en+HTML5">Animez vos pages HTML5: un tour d'horizon complet des techniques d'animation en HTML5</a></h3>

<p><a href="http://www.devoxx.com/display/FR13/Martin+Gorner">Martin Gorner</a> (<a href="https://twitter.com/martingorner">@martingorner</a>) de Google nous parle d'animation en HTML5. Sa présentation est visible <a href="http://animateyourhtml5.appspot.com/pres/#1">en live sur ce site</a>.</p>

<p>En CSS 3, <code>transition</code> permet d'animer des éléments. Le navigateur va calculer lui-même toutes les étapes intermédiaires.
La propriété <code>animation</code> permet de faire des animations plus complexes, en définissant les propriétés CSS à appliquer à différentes étapes.
Le CSS 3 dispose également de transformations géométriques 2D (rotation, agrandissement, étirement, etc.).
Il y a également des transformations 3D : <code>translateZ</code>, <code>rotateY</code>, etc.
A noter qu'il faut définir soi même la perspective via une propriété CSS : <code>-webkit-perspective: 1000px;</code>.
Par défaut, la valeur par défaut est <code>-webkit-tansform-style: flat</code>. Ce n'est pas ce que l'on souhaite, il faut donc la mettre à <code>preserve-3d</code>. Attention, Internet Explorer 10 ne gère pas cette propriété (mais on peut bidouiller avec du JavaScript pour remplir cette lacune).</p>

<p><img src="/images/devoxxfr-2013-animation-1.jpg" title="Finalement, animer un cube en CSS, ce n'est pas si compliqué" alt="Finalement, animer un cube en CSS, ce n'est pas si compliqué" /></p>

<p>Les bonnes habitudes pour travailler en 3D :</p>

<ul>
<li>Créer un <code>div</code> qui représente la scène.</li>
<li>Créer un objet qui supportera l'animation.</li>
<li>Y affecter des images.</li>
<li>Définir les propriétés d'animation.</li>
</ul>


<p>Après avoir passé en revue l'utilisation des Canvas 2D, Martin aborde le Canvas 3D, connu aussi sous le nom de <strong>WebGL</strong>. Après quelques explications, Martin propose d'aborder la partie pratique à l'aide de la librairie <a href="https://github.com/mrdoob/three.js/">Three.js</a>, qui permet de coder dans le moteur WebGL en JavaScript : définition de la scène, création d'une "caméra", des "lumières". Ensuite on peut ajouter des objets (des <em>Meshs</em>). Enfin, on définit les actions.
Voici un exemple de code avec cette librairie :</p>

<p>``` javascript</p>

<p>var camera, scene, renderer;
var geometry, material, mesh;</p>

<p>init();
animate();</p>

<p>function init() {</p>

<pre><code>camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );
camera.position.z = 1000;
scene = new THREE.Scene();
geometry = new THREE.CubeGeometry( 200, 200, 200 );
material = new THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: true } );
mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );
renderer = new THREE.CanvasRenderer();
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );
</code></pre>

<p>}</p>

<p>function animate() {</p>

<pre><code>// note: three.js includes requestAnimationFrame shim
requestAnimationFrame( animate );
mesh.rotation.x += 0.01;
mesh.rotation.y += 0.02;
renderer.render( scene, camera );
</code></pre>

<p>}
```</p>

<p>Three.js gère également des modèles d'objets 3D (via la spécification <a href="https://collada.org">Collada</a> par exemple).</p>

<p>Un point sur les préfixes (ici <code>-webkit-*</code>) : il y a une "convention". Tant qu'une spécification n'est pas officielle, les navigateurs utilisent des préfixes. Une fois la spécification entérinée, alors le préfixe peut disparaître. On peut sinon utiliser des outils tels que <a href="http://leaverou.github.com/prefixfree/">prefixfree.js</a> ou <a href="http://sass-lang.com/">SASS</a> qui vont s'occuper d'ajouter les préfixes pour nous.</p>

<p><img src="/images/devoxxfr-2013-animation-2.jpg" title="Les 4 possibilités d'animations en web" alt="Les 4 possibilités d'animations en web" /></p>

<hr/>


<h2><a href="http://www.devoxx.com/display/FR13/Peut+on+toujours+etre+developpeur+apres+40+ans">Peut on toujours être développeur après 40 ans ?</a></h2>

<p><a href="http://www.devoxx.com/display/FR13/Benjamin+Marron">Benjamin Marron</a> (<a href="https://twitter.com/bmarron">@bmarron</a>) nous explique s'il est possible</p>

<p>Être boucher à 40 ans ? Artisan à 40 ans ? La question ne se pose pas tant elle est évidente. Pourtant, pour un développeur, la question se pose.
Y a-t-il une obscolescence des développeur ? Si la personne est concernée, se forme, alors non. Mais sans ces efforts, cela risque d'arriver. Et direction chef de projet :)</p>

<p>Grâce à leur expérience, les développeurs expérimentés savent mieux filtrer les informations, choisir les outils ou les librairies.</p>

<p><img src="/images/devoxxfr-2013-40ans.jpg" title="Développeur à 40 ans, c'est ça ?" alt="Développeur à 40 ans, c'est ça ?" /></p>

<p>Alors la question est peut-être de savoir si nous sommes usés ?
Il ne faut pas rester dans sa zone de confort.
Les conférences comme Devoxx permettent de se gonfler à bloc, le leitmotiv c'est "<strong>soyez fiers d'être développeurs</strong>"</p>

<p>Quid du choc générationnel ? Comme travailler avec des "petits jeunes" de 20 ans ? Il faut rester humble, dire que l'on a toujours à apprendre.</p>

<p>Il y a aussi le problème de disponibilité, avec la vie de famille, les enfants, etc. Mais cela reste jouable, et le fait de ne pas être toujours 100% disponible pour son travail n'est pas un frein.</p>

<p>Le message de Benjamin Marron est que la passion doit nous faire continuer dans cette voie, et que nous avons les moyens d'y parvenir. Un sujet n'a pas été vraiment abordé, si ce n'est lors des questions du public : la reconnaissance de l'expérience par l'employeur. Il est vrai qu'en France, niveau salaire, on a tendance à stagner assez vite (disons à partir d'une dizaine d'années d'expérience), et continuer sa progression n'est pas toujours facile. Ca reste compliqué aujourd'hui, mais les choses semblent changer. Doucement en tout cas.</p>

<hr/>


<h2><a href="http://www.devoxx.com/display/FR13/Winter+is+coming">Winter is coming</a></h2>

<p><img src="/images/devoxxfr-2013-winter.jpg" title="Winter is coming" alt="Winter is coming" /></p>

<p>Je finis (ou presque) ma journée avec la présentation de <a href="http://www.devoxx.com/display/FR13/Didier+Girard">Didier Girard</a> et <a href="http://www.devoxx.com/display/FR13/Aurelien+Pelletier">Aurélien Pelletier</a> de <a href="http://www.sfeir.com/">SFEIR</a>. J'avoue que j'ai un peu du mal à savoir quoi tirer de cette présentation, tant le message n'était pas très clair. L'idée, du moins une partie de ce qui a été dit, c'est de savoir comment juger de la pertinence d'un framework, d'une librairie, et de savoir estimer son espérance de vie, dans un monde très concurrentiel.</p>

<p>Didier Girard décide donc d'utiliser <a href="http://www.google.com/trends/?hl=en">Google Trends</a> pour juger de la popularité d'un framework. Cet outil de Google permet de mesurer, et comparer, le nombre de fois où tel ou tel mot est <em>recherché</em> sur Google.
Plutôt que simplement comparer deux noms de technologies via le site de Google, il décide d'y ajouter le terme <em>tutorial</em>, supposant que plus on recherche de tutoriels sur une technologie, plus celle-ci intéresse les gens, et sera facile à maitriser.
Bien sûr, Didier Girard insiste sur le fait que cela doit aider à se faire une opinion, mais que cela ne saurait suffire. Pourtant, il n'ira guère plus loin dans sa démonstration, ce qui est un peu contradictoire au final. Dommage.</p>

<p>Pour résumer, on va dire que ce n'est pas forcément la présentation que j'ai préféré à Devoxx :)</p>

<hr/>


<h2><a href="http://www.devoxx.com/display/FR13/Les+Cast+Codeurs+Podcast...+putain+4+ans+deja%21">Les CastCodeurs, putain 4 ans déjà</a></h2>

<p><img src="/images/devoxxfr-2013-castcodeurs.jpg" title="Merci Atlassian, une fois de plus !" alt="Merci Atlassian, une fois de plus !" /></p>

<p>Ca devient une tradition, finir un Devoxx avec une session live des <a href="http://lescastcodeurs.com/">Cast Codeurs</a>. A vrai dire, je ne vois <strong>aucune</strong> raison de ne pas y assister : récapitulatif de la conférence, bonne ambiance, bonnes blagues (quoique ?) et bières offertes par Atlassian ! Rien de mieux pour terminer en beauté une magnifique conférence. Allez écouter le podcast, bientôt disponible. En attendant, il y a les podcasts de <a href="http://lescastcodeurs.com/2011/11/28/les-cast-codeurs-podcast-episode-49-devoxx-2011-les-dix-ans/">Devoxx 2011</a>, <a href="http://lescastcodeurs.com/2012/04/21/les-cast-codeurs-podcast-episode-57-en-direct-de-devoxx-france-2012/">Devoxx France 2012</a>, et enfin <a href="http://lescastcodeurs.com/2012/11/29/les-cast-codeurs-podcast-episode-68-devoxx-2012-et-les-putchettes/">Devoxx 2012</a>.</p>

<p>A l'année prochaine !</p>
]]></content>
  </entry>
  
</feed>
