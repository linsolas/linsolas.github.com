<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: soft-shake | fr.romain:blog:3.0]]></title>
  <link href="http://linsolas.github.com/blog/categories/soft-shake/atom.xml" rel="self"/>
  <link href="http://linsolas.github.com/"/>
  <updated>2014-01-26T21:49:03+01:00</updated>
  <id>http://linsolas.github.com/</id>
  <author>
    <name><![CDATA[Romain Linsolas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SoftShake 2013 - facilitation graphique]]></title>
    <link href="http://linsolas.github.com/blog/2013/10/29/softshake-2013-facilitation-graphique/"/>
    <updated>2013-10-29T18:31:00+01:00</updated>
    <id>http://linsolas.github.com/blog/2013/10/29/softshake-2013-facilitation-graphique</id>
    <content type="html"><![CDATA[<p>Les organisateurs de la conférence SoftShake ont eu la très bonne idée d'inviter Elizabeth Auzan et Sébastien Gerbier des "<em>Visual Thinkers</em>", ou <em>Facilitateus Visuels</em>, de la société <a href="http://www.lowtech-hitouch.com/">Lowtech Hitouch</a>.</p>

<p>L'idée est simple : ils se présentent à différentes sessions et illustrent graphiquement ce qu'ils entendent, ce qu'ils comprennent.
Je n'ai pas eu la chance qu'ils viennent à ma session, mais je partage quand même les très jolies planches que voici (désolé pour la 4e qui est un peu floue) :</p>

<p><img src="/images/softshake-2013-dessin1.jpg" title="Première image" alt="Priemère image" /></p>

<!-- more -->


<p><img src="/images/softshake-2013-dessin2.jpg" title="Deuxième image" alt="Deuxième image" />
<img src="/images/softshake-2013-dessin3.jpg" title="Troisième image" alt="Troisième image" />
<img src="/images/softshake-2013-dessin4.jpg" title="Quatrième image" alt="Quatrième image" />
<img src="/images/softshake-2013-dessin5.jpg" title="Cinquième image" alt="Cinquième image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SoftShake 2013 - deuxième jour]]></title>
    <link href="http://linsolas.github.com/blog/2013/10/25/softshake-2013-deuxieme-jour/"/>
    <updated>2013-10-25T16:19:00+02:00</updated>
    <id>http://linsolas.github.com/blog/2013/10/25/softshake-2013-deuxieme-jour</id>
    <content type="html"><![CDATA[<p><img src="/images/soft-shake-2013.png" title="Soft Shake 2013" alt="Soft Shake 2013" /></p>

<p>Et c'est parti pour le second jour de la conférence <strong>Soft-Shake</strong>.</p>

<!-- more -->


<h2>Keynote collaborative</h2>

<p>La première keynote de la journée était une keynote "collaborative".
Chaque responsable d'un track de sessions avait la parole pendant 4 minutes pour nous exposer sa vision à moyen terme (entre 2 et 5 ans) concernant sa technologie. Par exemple, le responsable de la partie "web" nous a dit que le JavaScript sera encore plus présent qu'aujourd'hui, en particulier du côté serveur.</p>

<h2>Keynote Programatoo</h2>

<p><img src="/images/note-4.5.png" title="4.5/5" alt="4.5/5" /></p>

<p>La seconde keynote parlait de "<strong>Programatoo</strong>", un projet lancé par Audrey Neveu (<a href="https://twitter.com/Audrey_Neveu">@Audrey_Neveu</a>) et Aline Paponaud (<a href="https://twitter.com/bootis">@bootis</a>) de <a href="http://www.sfeir.fr">SFEIR</a>.
Qu'est-ce que Programatoo ?
Il s'agit d'apprendre à coder à nos enfants, n'y plus n'y moins.</p>

<p><img src="/images/programatoo.jpg" title="Programatoo" alt="Programatoo" /></p>

<p>Revenons 20 ans en arrière pour comprendre la génèse de cette idée.
Au milieu des années 80, Aline et Audrey sont des petites filles (très sages, forcément) déjà attirées par les mystères de l'informatique et des ordinateurs. Elles veulent comprendre comment ça marche. 10 ans plus tard, leur intérêt est toujours intact, mais hélas elles se heurtent souvent à des stéréotypes ("<em>ce n'est pas pour les filles !</em>") ou l'incompréhension du milieu scolaire pour ce domaine.
Audrey apprend avec joie qu'il y a des cours d'informatique dans son lycée. Elle s'y inscrit, mais cela se résumera à apprendre à utiliser Word ou Excel. C'est la déception.
De son côté, Aline n'a guère plus de succès.
Fort heureusement, elles ne baissent pas les bras, et embrassent le métier de programmeuse.</p>

<p>En 2012, Aline va trouver Audrey pour proposer une idée géniale : et si on apprenait à coder à nos enfants ! C'est ainsi qu'en mars 2012 nait la première session "Programatoo", avec les enfants des employés de SFEIR. Et c'est un succès.</p>

<p>Les choses ne sont pas pour autant parfaites.
Elles font un constat navrant. Parmi les participants, il y avait deux adolescentes. Celles-ci sont parfaitement à l'aise avec les ordinateurs, du moins quand il s'agit d'utiliser Facebook, YouTube et autres services du genre. Mais elles sont incapables de vraiment utiliser un ordinateur, de comprendre comment cela fonctionne, ni même voir en cette machine un merveilleux outil de créativité !</p>

<p>On dit que la jeune génération est une génération "digitale", qu'elle est née avec un smartphone dans les mains. Je le constate aussi, mon fils de 6 ans maitrise depuis un moment l'iPad, qui n'a plus de secret pour lui.
Mais en réalité, nos enfants sont conditionnés pour "<strong>consommer</strong>" de l'informatique. Il faut les aider à en devenir des acteurs, des vrais utilisateurs.
Finalement, c'est un peu comme une carte et un GPS : aujourd'hui, l'utilisation d'un GPS est plutôt intuitive et il nous mâche tout le travail, on n'a plus qu'à suivre bêtement ses instructions. Du coup, il devient obsolète de savoir lire une carte papier classique, et pourtant cela reste la base pour savoir se positionner quelque part...</p>

<p>En tant qu'informaticien, il ne tient qu'à nous de changer la donne. Nous avons beaucoup d'outils, de langages destinés à l'aprentissage de la programmation, y compris destinés à de jeunes enfants.
Ayant discuté ensuite avec Audrey, je vais sans doute essayer de mettre mon fils à la programmation.
Bien entendu, point de Scala :) mais plutôt du <a href="http://scratch.mit.edu">Scratch</a> qui a l'avantage d'être très visuel et ludique.</p>

<p>Il faut noter que le projet Programatoo n'est pas unique en son genre. Les conférences "Devoxx 4 Kids" s'organisent par-ci, par-là. Il y en avait justement une à Genève le samedi qui a suivi la conférence Soft-Shake.</p>

<p>Programatoo a également gagné le "Duke Choice Awards 2013" à la conférence Java One. Une très belle consécration amplement méritée.
Bravo Audrey et Aline !</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_ruby/2013/10/25/01-speedup-your-web-app.html">Speed-up your webapp</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/alexis-bernard.html">Alexis Bernard</a> (<a href="https://twitter.com/alexis_bernard">@alexis_bernard</a>)</p>

<p><img src="/images/note-2.png" title="2/5" alt="2/5" /></p>

<p>Je suis ouvert d'esprit, je vais donc dans le track "Ruby" pour la première session de la journée.
Alexis nous parle d'optimisation quand on veut accélérer son site web.</p>

<p>Première question : pourquoi le faire ?
A cela, Alexis nous donne les exemples de Amazon et Yahoo! : pour le premier, diminuer le temps de réponse de 100ms, c'est un gain de revenu de l'ordre d'1%, ce qui n'est pas négligeable quand on voit leurs revenus...
Pour le second, une diminution de 400ms de ce temps de réponse, et c'est 9% de traffic gagnés !
Tout le monde n'est pas Amazon ou Yahoo! mais cela reste intéressant.</p>

<p>La technique d'Alexis est simple : mesurer, optimiser et mesurer encore.</p>

<p>Donc il faut mesurer. Pour cela, Alexis nous parle de quelques outils :</p>

<ul>
<li><a href="http://www.newrelic.com/">New Relic</a>, une solution SAAS visiblement assez poussée, qui historise en plus les mesures. Pratique pour comparer dans le temps. Mais c'est une solution assez chère visiblement (de l'ordre de 150€ par mois et par serveur).</li>
<li><a href="https://github.com/MiniProfiler/rack-mini-profiler">Rack Mini Profiler</a>, un outil Ruby, un peu dans la même idée que New Relic, mais avec moins de fonctionnalités, et pas d'historisation.</li>
<li><a href="https://www.pingdom.com/">Pingdom</a> dont l'une des fonctionnalités est de vérifier que les recommandations standard d'optimisations des sites-web sont bien respectées.</li>
<li><a href="http://www.webpagetest.org/">WebPageTest</a>, qui a l'astuce de tester chaque requête 2 fois de suite. Cela permet ainsi de vérifier l'efficacité du système de cache des ressources.</li>
<li>Chrome Dev Tools peut aussi être mis à profit pour mesurer les performances de l'application.</li>
</ul>


<p>Une fois les mesures faites, il faut corriger les problèmes. Alexis nous dit qu'il faut toujours optimser le <em>back-end</em> dans un premier temps. La plupart du temps cela va se résumer à optimiser la base de données, les requêtes, les indexes, etc.
Une fois ceci fait, on peut s'intéresser à l'optimisation <em>front-end</em>. Là aussi des outils peuvent nous aider, Chrome Dev Tools par exemple, ou imageoptim.com, pour améliorer la compression des images.</p>

<p>Une session intéressante, mais qui ne va pas à mon goût assez loin dans les détails. Les solutions proposées restent assez basiques au final.</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_java/2013/10/25/02-Golo.html">Golo, le langage qui donne des super-pouvoirs</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/philippe-charriere.html">Philippe Charrière</a> (<a href="https://twitter.com/k33g_org">@k33g_org</a>)</p>

<p><img src="/images/note-3.5.png" title="3.5/5" alt="3.5/5" /></p>

<p>Mais qu'est-ce que <strong>Golo</strong>, ce langage au nom rigolo ?
C'est un langage créé par Julien Ponge (@jponge) qui tourne sur la JVM, avec Java 7 ou 8 (pas avant, car Golo nécessite <code>invokedynamic</code> pour tourner, introduit en Java 7).
Ses principales forces sont sa simplicité, sa légèreté ainsi que la facilité d'étendre le langage.</p>

<p>Philippe nous montre quelques exemples de code, la syntaxe reste assez compréhensible pour un développeur Java.
Les lambdas, qui se font toujours attendre dans Java, sont là, tout comme les structures, des objets créés dynamiquement (<code>ObjectDynamic</code>) ou encore la possibilité d'étendre (<code>augment</code>) des classes existantes pour leur ajouter des fonctionnalités.</p>

<p>Je vous invite à aller jeter un oeil sur le site du langage - <a href="http://golo-lang.org">http://golo-lang.org</a> - pour vous rendre compte de ce qu'offre ce langage, et voir quelques exemples concrets de code. Voilà un basique <em>Hello World</em> :</p>

<p>```
module EchoArgs</p>

<p>function main = |args| {</p>

<pre><code>println("Hello World...")
foreach arg in args {
  println("-&gt;  " + arg)
}
</code></pre>

<p>}
```</p>

<p>J'ai aimé cette présentation, qui nous a donné un bon aperçu de ce qu'est Golo.
Toutefois, cela reste un langage dont le but m'échappe un peu - hormis le côté "fun" d'avoir créer son propre langage !</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_mobile/2013/10/25/3-Mobile-troll-party.html">Mobile Troll Party</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/xavier-bourguignon.html">Xavier Bourguignon</a> (<a href="https://twitter.com/xbourguignon">@xbourguignon</a>)</p>

<p><img src="/images/note-3.png" title="3/5" alt="3/5" /></p>

<p><img src="/images/softshake-2013-mobile-troll-party.jpg" title="Une session pleine de violences" alt="Une session pleine de violences" /></p>

<p>Une session pour le fun. Le but ici est de troller sévèrement sur iOS et Android.
Je m'attendait à un peu plus de trash, un peu plus de sujets polémiques. Le jeu des deux présentateurs n'était peut-être pas assez rodé je pense, mais d'après ce que j'ai compris, Xavier devait la faire seul jusqu'à la veille au soir où il a réussi à convaincre son partenaire de venir aussi.
Malgré tout, c'était une bonne ambiance, et les trolls étaient effectivement nombreux !</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_agile/2013/10/25/4-5-ans-et-500-releases-en-50-minutes.html">5 ans, 500 releases en 50 minutes</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/25/freddy-mallet.html">Freddy Mallet</a> (<a href="https://twitter.com/FreddyMallet">@FreddyMallet</a>) et <a href="http://soft-shake.ch/2013/program/authors/2013/10/24/olivier-gaudin.html">Olivier Gaudin</a> (<a href="https://twitter.com/gaudol">@gaudol</a>)</p>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>Compte tenu du temps imparti (45 minutes), cette session a été renommée "<em>4 ans, 400 releases en 40 minutes</em>" :)
Cette session raconte la vie de la société SonarSource, éditeur de l'outil d'analyse de code SonarQube (connu anciennement simplement sous le nom Sonar).</p>

<p>Lorsque SonarSource a été créée, il y a 5 ans, c'était une petite startup lancée par trois personnes (en particulier Olivier et Freddy), sur leurs fonds propres. La société marche bien aujourd'hui, et a bien grossi (une 20aine de personnes d'ici la fin de l'anée), mais il y a eu beaucoup de problèmes, de "douleurs". En particulier 5 :</p>

<ul>
<li>Les tests.</li>
<li>L'architecture.</li>
<li>L'infrastructure.</li>
<li>L'organisation.</li>
<li>Sonar on Sonar.</li>
</ul>


<p>Un gros travail a été fait sur les tests. Les tests unitaires d'abord, mais aussi les tests d'intégration. Le fait que Sonar supporte 5 bases de données différentes, qu'il existe une soixante de plugins ne rend pas les choses simples. Toutefois, ils arrivent à tout tester de façon assez efficace.</p>

<p>Initialement, HibernateORM et GWT avaient été choisis. Le premier car gérer 5 bases de données et autant de spécificités n'est jamais aisé. Le second, car à l'époque cela répondait bien aux besoins de l'équipe. Mais ces choix se sont finalement avérés être des maillons faibles, et progressivement ont été remplacés.</p>

<p>Les développeurs ne font pas que des développements, il a fallu embaucher une personne dédiée à part entière pour gérer l'infrastructure et les releases. Mais un tel cloisonnement n'est jamais très efficace, et SonarSource a ainsi créer une équipe de "DevOps".</p>

<p>Afin de ne pas être désynchroniser avec les utilisateurs de l'outil, l'équipe de SonarSource utilise SonarQube directement. Le fameux principe du "<em>Eat your own dog food</em>" en somme. Ils ont ainsi une instance de "production" interne pour laquelle ils font des releases toutes les semaines. Cela implique donc d'être capable de faire des releases presque tous les jours, les développements de type "big bang" sont donc exclus.</p>

<p>Un dernier point abordé par Freddy et Olivier concerne le <em>Quality Gate</em> (un sujet qui mériterait sans doute une session à part entière). Il s'agit d'une sorte de contrat de qualité pour pouvoir faire une release. En gros, il faut respecter certaines règles, atteindre certains objectifs pour engager la release : par exemple, avoir clos tous les tickets JIRA, avoir une note SQALE de A (la meilleure), ne pas avoir de violations bloquantes ou critiques, ou même de violations non revues par l'équipe.</p>

<h2>Bilan</h2>

<p>Au final, ce sont deux très belles journées qui viennent de s'écouler.
La qualité des présentations et le niveau des speakers sont très bons.</p>

<p>Les plus :</p>

<ul>
<li>Du beau monde. C'est toujours un plaisir de revoir des gens qu'on apprécie, et de rencontrer physiquement des personnes que l'on ne connait que par Twitter.</li>
<li>De bons sujets.</li>
<li>Des tracks très variés : Java, agilité, web, mobile, IA/Robotique, BigData et NoSQL, Microsoft, Ruby on Rails.</li>
<li>Le repas des speakers (miam miam la fondue !)</li>
<li>Genève, très jolie ville.</li>
<li>Les organisateurs, très accueillants et toujours disponibles.</li>
<li>Les dessins en live des sessions (voir prochain billet).</li>
</ul>


<p>Les moins :</p>

<ul>
<li>La séparation des salles. Elles se trouvaient soit au 1e étage, soit au 5e. Changer de salle pouvait ainsi demander un peu de gymnastique !</li>
<li>A peu de choses près, les mêmes repas le midi sur les deux jours. Un peu plus de variété aurait été appréciable. Pas de problème au niveau de la quantité toutefois.</li>
<li>J'aurais bien aimé que SoftShake se tienne en hiver, Genève sous la neige doit être très agréable.</li>
</ul>


<p>Pour résumer, Soft Shake est une très belle conférence, dans l'esprit de Devoxx ou Mix-IT. J'y retournerais avec grand plaisir !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SoftShake 2013 - premier jour]]></title>
    <link href="http://linsolas.github.com/blog/2013/10/24/softshake-2013-premier-jour/"/>
    <updated>2013-10-24T11:39:00+02:00</updated>
    <id>http://linsolas.github.com/blog/2013/10/24/softshake-2013-premier-jour</id>
    <content type="html"><![CDATA[<p><img src="/images/soft-shake-2013.png" title="Soft Shake 2013" alt="Soft Shake 2013" /></p>

<p>Jacques Couvreur nous accueille pour <a href="http://soft-shake.ch/2013/fr/">cette session 2013 de la conférence Soft-Shake</a>. Ce sont 2 jours de conférences, neuf tracks en parallèle, une centaine d'orateurs, et 300 participants. A noter qu'environ un tiers des présentations se fait en anglais.
Une bonne petite conférence donc !</p>

<!-- more -->


<p><img src="/images/softshake-2013-Geneve.jpg" title="Le fameux Jet d'Eau de Genève" alt="Le fameux Jet d'Eau de Genève" /></p>

<p>Je vais <a href="http://www.touilleur-express.fr/2013/10/18/codeurs-en-seine-2013/">faire comme Nicolas Martignole</a> (a.k.a. le touilleur express), à savoir que je vais donner pour chaque session mon ROTI, le Retour sur le Temps Investi, autrement dit une note de 0 à 5 qui dénote l'intérêt que j'ai eu à suivre la présentation.</p>

<h2>Keynote</h2>

<p>Robin Cornelius</p>

<p><img src="/images/note-3.5.png" title="3.5/5" alt="3.5/5" /></p>

<p>Difficile de résumer cette keynote. C'était plus un discours de Robin Cornelius sur sa vie et celle de sa société, <a href="http://www.switcher">Switcher</a>.
Mais c'était tout de même agréable de l'écouter parler. Robin fait partie des gens passionnés par son travail, sa société, et que l'on pourrait écouter pendant des heures.
Bon démarrage donc...</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_mobile/2013/10/24/1-votre-premiere-application-ios.html">Votre première application iOS</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/marc-henri-primault.html">Marc-Henri Primault</a></p>

<p><img src="/images/note-2.png" title="2/5" alt="2/5" /></p>

<p>Présenter un langage en l'espace de 45 minutes, c'est compliqué, il y a forcément beaucoup de concepts à montrer.
Je pense que Marc-Henri a bien montré les bases, mais il est vrai que la lisibilité du code dans les slides n'était pas extraordinaire. La coloration de certains mots clés en violet sur fond noir n'est jamais bien rendue par un vidéoprojecteur.</p>

<p>Personnellement, j'ai eu du mal à accrocher car malheureusement le format de présentation ne se prête pas très bien à un tel apprentissage, en particulier pour des personnes comme moi qui n'y connaissent pas grand chose en développement iOS. Un "<em>Hands On</em>" s'y prêterait tellement mieux !</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_web_dev/2013/10/24/2-Generating_tests_from_code_or_how_to_test_better_and_faster.html">Generating tests from code, or how to test better and faster</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/renault-john-lecoultre.html">Renault John Lecoultre</a> (<a href="https://twitter.com/renajohn">@renajohn</a>)</p>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>Tester une application JavaScript, c'est compliqué.
Il existe deux types d'analyse de code : l'analyse statique et dynamique.</p>

<p>La première se concentre à vérifier syntaxiquement si le code est correct.
On détectera ici l'utilisation de mauvais patterns, ou du code qui peut présenter un risque fort de bug, comme par exemple l'utilisation du <code>==</code> au lieu du <code>===</code> en JavaScript. Des outils comme <a href="http://www.jslint.com/">JSLint</a>, <a href="http://www.jshint.com/">JSHint</a> ou encore <a href="http://www.sonarqube.org/">SonarQube</a> sont tout à fait adaptés pour ce type d'analyse. Mais cela a quand même des limites.</p>

<p>L'analyse dynamique va exécuter le code pour en vérifier certaines règles, le cas le plus courant étant l'exécution de tests (unitaires, fonctionnels, etc.).</p>

<p>Renault nous parle toutefois d'un troisième type d'analyse, à savoir <strong>l'analyse symbolique</strong>.
Une rapide recherche sur Google me dit que "<em>L'analyse symbolique de données consiste en un mode d'analyse de tableaux de données statistiques arbitraires par perception cognitive de la surface expressionnelle du médium.</em>"
Bon, je crois qu'on va laisser tomber la définition et voir directement comment Renault l'illustre dans sa démonstration.</p>

<p>Il nous parle de l'outil <a href="https://unite.bugbuster.com/">Unite</a> de sa société <a href="http://bugbuster.com/">BugBuster</a>.
L'idée derrière cet outil est de lui fournir une fonction en entrée, et lui va essayer de trouver un jeu d'entrées (<em>inputs</em>) afin de pouvoir tester tous les chemins possibles dans la fonction.
Prenons l'exemple suivant :</p>

<p>``` javascript
// params : {x: Number}
function puzzle(x){
  if(x)</p>

<pre><code>return true;
</code></pre>

<p>  else</p>

<pre><code>return false;
</code></pre>

<p>}
```</p>

<p>On le voit, pour parcourir les deux branches de cette fonction, nous devons faire en sorte d'évaluer à <code>true</code> la condition <code>if</code>, puis également à <code>false</code>. C'est là qu'intervient Unite. Il va analyser le code de la fonction pour nous trouver les deux valeurs d'entrée, ici <code>x = 0</code> puis <code>x = 1</code>.
Là où l'outil devient plus intéressant, c'est quand on a du code plus complexe. Prenons un nouvel exemple, avec une fonction de validation d'email (avec une expression régulière simple) :</p>

<p>``` javascript
// params : {email: String}
function puzzle(email){
  if(email.match(/<sup>\w+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/))</sup></p>

<pre><code>return true;
</code></pre>

<p>  else</p>

<pre><code>return false;
</code></pre>

<p>}
```</p>

<p>Unite va nous trouver deux entrées possibles : <code>`email = "a"</code> pour l'évaluation négative de la condition, et <code>email = "9@B.PH"</code> pour son évaluation positive.</p>

<p>Je dois dire que l'outil s'avère très intéressant, bien qu'encore à l'état de bêta. Reste la question de l'industrialisation d'un tel outil. Pour le moment, je le vois bien comme utilisation <em>one shot</em> pour trouver un bon ensemble de jeux de données pour tester une fonction.
En tout cas, c'est un outil à suivre de près...</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_web_dev/2013/10/24/3-Backbone_et_marionette_le_dev_js_simplifie.html">Backbone.js et Marionette, le développement JavaScript simplifié</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/xavier-bourguignon.html">Xavier Bourguignon</a> (<a href="https://twitter.com/xbourguignon">@xbourguignon</a>) et <a href="http://soft-shake.ch/2013/program/authors/2013/10/24/philippe-charriere.html">Philippe Charrière</a> (<a href="https://twitter.com/k33g_org">@k33g_org</a>)</p>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>Backbone est une librairie légère pour faire du single page application ("MVC" / "MVP" côté client). Il se base sur la librarie <a href="http://underscorejs.org/">underscore</a>, pour le templating par exemple.
Backbone dispose d'un modèle objet. Son intérêt réside également dans sa facilité d'extension.</p>

<p>Philippe commence à nous montrer des exemples de code avec Backbone. Mais de l'avis de Xavier, "<em>Backbone c'est bien, sauf la partie vue</em>".
Et c'est vrai que je trouve le code côté vue assez verbeux. C'est pour cela qu'il introduit la librairie <a href="http://marionettejs.com/">Marionette.js</a>, qui joue ainsi le rôle de surcouche à BackBone pour gérer la partie Vue. Ainsi, Marionette permet de faire du vrai <em>Single Page Application</em> avec BackBone.</p>

<p>Xavier et Philippe nous offrent ainsi une vision assez claire de ce framework, en montrant ses atouts mais aussi ses limites. J'avoue que je préfère toujours AngularJS, bien que ce dernier ait un côté un peu plus "magique" que Backbone qui semble plus accessible et plus compréhensible.</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_web_dev/2013/10/24/4-Web_Components_lavenir_des_developpeurs_web.html">Web Components, l'avenir des développeurs web</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/julien-vey.html">Julien Vey</a> (<a href="https://twitter.com/julienvey">@julienvey</a>)</p>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>Les applications web sont aujourd'hui de plus en plus riches, et le langage HTML atteint vite ses limites.
C'est pour cela que le concept de <strong>composants web</strong> est arrivé.
Il s'agit d'un standard W3C en cours de rédaction, partiellement implémenté par les navigateurs (particulièrement Chrome).</p>

<p>L'idée est de créer des "éléments customs". Imaginons le bouton "Twitter" que l'on peut ajouter sur son site, afin de permettre au visiteur du site de suivre votre compte Twitter.
Si vous regardez le code de ce bouton, vous verrez un truc illisible fait de HTML et JavaScript. Ne serait-ce pas plus simple d'avoir un tag <code>&lt;twitter user="romaintaz"/&gt;</code> par exemple ? De même, un composant pour noter un article n'aurait-il pas plus de sens sous la forme <code>&lt;ranking note="3"/&gt;</code> ?</p>

<p>Eh bien c'est (à peu près) possible aujourd'hui !</p>

<h3>Les templates</h3>

<p>La première brique à connaître, ce sont les templates. Ils permettent la séparation du fond et de la forme <em>via</em> l'utilisation de <code>&lt;template&gt;</code> :</p>

<p>``` html
<template id="monTemplate"></p>

<pre><code>// code HTML du template.
&lt;img src=""&gt;
&lt;div class="comment"&gt;&lt;/div&gt;
</code></pre>

<p></template>
```</p>

<p>Ce template est parsé, mais pas affiché. Les balises <code>&lt;script/&gt;</code> ne sont pas exécutées, et les images ne sont pas chargées. Le code ci-dessus est donc parfaitement valide. Pour l'instancier, il suffit d'un peu de code JavaScript :</p>

<p><code>javascript
var t = document.querySelector('#monTemplate');
t.content.querySelector('img').src = "...";
document.body.appendChild(t.content.cloneNode(true));
</code></p>

<p>A ce moment-là, les scripts sont exécutés, les images chargées et le DOM affiché.</p>

<h3>Encapsulation</h3>

<p>Passons à la deuxième brique : l'encapsulation.
Aujourd'hui, on utiliserait des <code>&lt;iframe&gt;</code>. Mais pouah !
Avec les web components, on utilise le principe du "<strong>shadow DOM</strong>", c'est-à-dire du DOM masqué du reste de l'application. Exemple :</p>

<p><code>html
&lt;video controls src="http://linsolas.github.com/ma/video"&gt;&lt;/video&gt;
</code></p>

<p>Avec Chrome Tools, on peut faire afficher le shadow DOM pour cette balise vidéo, sous un "tag" <code>#document-fragment</code> :</p>

<p>``` html</p>

<div id="host">
</div>


<p>```</p>

<p><code>javascript
var host = document.querySelector('#monTemplate');
show = host.createShadowRoot();
shadow.innerHTML = '&lt;h2&gt;Hello&lt;/h2&gt;';
</code></p>

<p>On peut aussi passer par des templates :</p>

<p><code>
shadow.webkitCreateShadowRoot();
</code></p>

<p>Il existe aussi le concept d'<em>Insertion point</em>, avec utilisation de <code>&lt;content&gt;&lt;/content&gt;</code> dans le shadow DOM. Le contenu de la balise du web component est injecté à la place du <code>&lt;content&gt;&lt;/content&gt;</code> défini dans le shadow DOM.</p>

<p>On peut aussi utiliser des sélecteurs pour ne récupérer qu'une partie du code HTML du composant web : <code>&lt;content select="h2"&gt;&lt;/content&gt;</code> qui récupèrera uniquement le code du <code>h2</code>, <code>&lt;content select="h1:first-child"&gt;&lt;/content&gt;</code> pour le premier élément de <code>h1</code> ou <code>&lt;content select="*"&gt;&lt;/content&gt;</code> pour récupérer le reste.</p>

<h3>Externalisation</h3>

<p>Comment peut-on créer des composants web et les utiliser ailleurs ? Cela se fait grâce à la balise <code>&lt;element&gt;</code> qui permet de créer ces nouveaux éléments :</p>

<p>``` html
<element name="megabutton" extends="button" constructor="MegaButton"></p>

<pre><code>&lt;template&gt;
    ...
&lt;/template&gt;
&lt;script&gt;
    ...
&lt;/script&gt;
</code></pre>

<p></element>
```</p>

<p>Et pour l'utiliser dans une autre page :</p>

<p><code>html
&lt;link rek="component" href="megabutton.html"&gt;
...
&lt;megabutton&gt;Clique ici&lt;/megabutton&gt;
</code></p>

<p>Ces éléments ont également un cycle de vie sur lequel il est possible d'intéragir grâce à des fonctions JavaScript : <code>created</code>, <code>attributeChanged</code>, <code>inserted</code> ou <code>removed</code> :</p>

<p>``` javascript
this.lifecycle({</p>

<pre><code>inserted: function() { ... },
removed: function() { ... }
</code></pre>

<p>})
```</p>

<h3>Mutation Observer</h3>

<p>Ces éléments sont utilisés pour détecter des modifications dans le code JavaScript.</p>

<h3>Object.observe()</h3>

<p>Il s'agit ici du monitoring des modifications des objects JS, bien plus performante que tout autre solution existante aujourd'hui.</p>

<p>``` javascript
function observeChanges(changes) {</p>

<pre><code>changes.forEach(function(change) {
    change.name;                // Name
    change.type;                // Type
    change.oldValue;            // Ancienne valeur
    change.object[change.name]; // Nouvelle valeur
});
</code></pre>

<p>}
```</p>

<p>Ainsi, entre le <em>Dirty checking</em> et le <em>Object.observe()</em>, le gain de performances peut être de l'ordre de 20 fois !</p>

<h3>Etat actuel</h3>

<p>AngularJS apporte sa philosophie, déclaratif plutôt qu'impératif.
Les directives d'Angular sont un peu les customs éléments.</p>

<p>Le projet "<a href="http://www.polymer-project.org/polymer.html">polymer.js</a>" vise à intégrer ces nouveautés dans les navigateurs.</p>

<p>Il existe aussi le projet Polymer.Dart pour le langage Dart.</p>

<p>Le site "<a href="http://jonrimmer.github.io/are-we-componentized-yet/">Are we componentized yet?</a>", montre l'état actuel de l'implémentation dans Chrome.
Du côté de Firefox, il existe des projets similaires Brick, X-Tag...</p>

<h3>Mon avis</h3>

<p>Une excellente session où j'ai appris pas mal de choses que je ne connaissais pas !</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_web_dev/2013/10/24/5-Du_Javascript_propre_Challenge_Accepted.html">Du JavaScript propre ? Challenge Accepted!</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/romain-linsolas.html">Romain Linsolas</a> (<a href="https://twitter.com/romaintaz">@romaintaz</a>) et <a href="http://soft-shake.ch/2013/program/authors/2013/10/25/julien-jakubowski.html">Julien Jakubowski</a> (<a href="https://twitter.com/jak78">@jak78</a>)</p>

<p><img src="/images/note-5.png" title="5/5" alt="5/5" /></p>

<p>Présentation tout simplement parfaite, sur un sujet somptueux. Du grand art !
Comment ça, je ne suis pas objectif ?</p>

<p>Bon, si vous voulez en savoir plus, revenez un peu en arrière sur mon blog, j'ai déjà parlé de cette présentation faite avec Julien à Devoxx.
Elle a encore plu, ça nous a fait très plaisir !</p>

<h2><a href="http://soft-shake.ch/2013/program/sessions/13_bigdata/2013/10/24/07-make-sense-of-your-big-data.html">Make sense of your (Big) Data</a></h2>

<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/david-pilato.html">David Pilato</a> (<a href="https://twitter.com/dadoonet">@dadoonet</a>)</p>

<p><img src="/images/note-4.png" title="4/5" alt="4/5" /></p>

<p>David Pilato est "évangeliste" (à ne pas confondre avec Eve Angeli !) pour <a href="http://www.elasticsearch.org/">ElasticSearch</a>, un outil très puissant et très sympathique pour faire de la recherche.
Associé avec <a href="http://www.elasticsearch.org/overview/kibana/">Kibana</a>, David nous montre comment il est possible pratiquement en temps réel de construire un dashboard très complet sur un grand jeu de données - stockées dans des noeuds ElasticSearch. Autrement dit, <em>comment donner du sens à ses données</em>.</p>

<p>J'essaierais de faire un billet dédié, je trouve que cette session est très intéressante car la solution mise en place est fichtrement simple pour un résultat franchement étonnant !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oyez oyez amis suisses]]></title>
    <link href="http://linsolas.github.com/blog/2013/08/19/oyez-oyez-amis-suisses/"/>
    <updated>2013-08-19T21:46:00+02:00</updated>
    <id>http://linsolas.github.com/blog/2013/08/19/oyez-oyez-amis-suisses</id>
    <content type="html"><![CDATA[<p><a href="http://soft-shake.ch/2013/program/authors/2013/10/24/romain-linsolas.html"><img src="/images/soft-shake-2013.png" title="Soft Shake 2013" alt="Soft Shake 2013" /></a></p>

<p>Super nouvelle, la présentation "<a href="http://soft-shake.ch/2013/program/sessions/13_web_dev/2013/10/24/5-Du_Javascript_propre_Challenge_Accepted.html">Du Javascript propre? Challenge Accepted!</a>" a été retenue pour la conférence <a href="http://soft-shake.ch/2013/fr/">Soft Shake 2013</a> à Genève en Suisse, du 23 au 24 octobre.
La présentation sera sensiblement la même que celle faite à Devoxx avec <a href="http://soft-shake.ch/2013/program/authors/2013/10/25/julien-jakubowski.html">Julien Jakubowski</a>, mais on essaiera de mettre à jour certaines parties.</p>

<p>Si vous venez à la conférence, venez nous voir !</p>
]]></content>
  </entry>
  
</feed>
